{
  "swagger": "2.0",
  "basePath": "/api/v3/oneprovider",
  "info": {
    "version": "20.02.0-beta3",
    "title": "Oneprovider",
    "description": "# Overview\n\nThis is the RESTful API definition of Oneprovider component of Onedata data management system [onedata.org](http://onedata.org).\n\n> This API is defined using [Swagger](http://swagger.io/), the JSON specification can be used to automatically generate\n> client libraries - [swagger.json](../../../swagger/oneprovider/swagger.json).\n\nAll paths below are relative to a common Oneprovider basepath which is `/api/v3/oneprovider`, thus a complete example\nquery for 'mode' file attributes would be:\n```\nhttps://ONEPROVIDER_HOSTNAME/api/v3/oneprovider/data/$FILE_ID?attribute=mode\n```\nPlease note that currently the default port for Oneprovider instances is `443`.\n\nIn addition to REST API, Oneprovider also provides support for [CDMI](http://onedata.org/#/home/documentation/doc/advanced/cdmi.html) protocol,\nand some of data management operations are currently only possible via CDMI.\n\n\n## Authentication\nIn order to be able to use this API the REST client must be able to authenticate with the Oneprovider service.\n\nCurrently this is supported through authentication token which can be generate using the Onedata user interface.\nThe token must be added to the request header like this:\n```\nX-Auth-Token: LAKSJHDLKJAHSDKLJHASKLCBBASKLCBLHABSCBALKSBCK...\n```\nIn case this Onedata deployment supports authentication delegation other IdP's,\nthe `X-Auth-Token` field can contain token from such IdP with appropriate prefix,\nas configured by Onezone administrators, e.g.:\n```\n  X-Auth-Token: github:GST5aasdA7asdAASFG7asdasaAS\n```\nIn addition please take into account, that depending on your account authorization rights, not all operations\nmay be possible.\n\n## API structure\nThe Oneprovider API reflects the fact that most operations deal directly with virtual file paths relative to\nuser spaces, which are provided as part of the paths in the REST calls.\n\nThe API provides the following functionality:\n\n### Data\n\n#### File information\nThe `/data/` path methods provide basic capability for:\n  - browsing files in spaces and directories,\n  - querying for file attributes, such as 'mode' file permissions and updating them,\n  - managing file metadata.\n\n#### Share information\nThe `/share/` methods enable creating, modyfying and deleting shares.\nShares are directories that were made publicly available, so they can be viewed by everyone\nthrough public URL.\n\n#### Space information\nThe `/space/` methods provide means for getting basic information about\nspaces directly from the Oneprovider service but also allows to define views and\nlist transfers for specified space.\n\n### Replication\n\n#### Replica management\nThe `/replicas/` methods allow retrieving information about file replica distribution\namong Onedata providers as well as requesting specific file replication to selected\nproviders.\n\n#### Transfer management\nThe `/transfer/` operations provide basic transfer management functionality based on the Id of transfer\nreturned by `/replicas/{path} [POST]` operation.\n\n### Monitoring\n\n#### Changes subscription\nThe `/changes/` method group provides means for subscribing (through HTTP long-polling technique) for\nfile related events such as reads, writes or deletes which are returned as complete file metadata\nrecords with sequence numbers representing their current version.\n\n#### Monitoring metrics\nThe `/metrics/` operations enable retrieval of internal Oneprovider monitoring data.\nAll monitoring data is returned in the form of [RRD](http://oss.oetiker.ch/rrdtool/)\ndatabase files, with resolution determined by the `step` query parameter.\n\n## Examples\n\n**Create replica of file at specific storage provider**\n```bash\ncurl -v --tlsv1.2 -H \"X-Auth-Token: $TOKEN\" -X POST \\\n\"https://$PROVIDER/api/v3/oneprovider/replicas/MySpace1/MyFile2.txt?provider_id=$PROVIDER_ID\"\n```\n\n**Get space storage qouta metric**\n```bash\ncurl -v --tlsv1.2 -H \"X-Auth-Token: $TOKEN\" -X GET \\\n\"https://$PROVIDER/api/v3/oneprovider/metrics/space/MySpace1?metric=storage_qouta\"\n```\n\nMore detailed examples are available in the documentation of each operation.\n",
    "x-bash-codegen-description": "This is the RESTful API definition of Oneprovider component of Onedata data\nmanagement system [onedata.org](http://onedata.org).\n\n\n## Authentication\nIn order to be able to use this API the REST client must be able to\nauthenticate with the Oneprovider service.\n\nCurrently this is supported through authentication token which can be\ngenerate using the Onedata user interface. The token must be added to the\nrequest header like this:\n```\nX-Auth-Token: LAKSJHDLKJAHSDKLJHASKLCBBASKLCBLHABSCBALKSBCK\n```\nor exported as an environment variable:\n```\nexport ONEPROVIDER_API_KEY=LAKSJHDLKJAHSDKLJHASKLCBBASKLCBLHABSCBALKSBCK\n```\n\nIn addition please take into account, that depending on your account\nauthorization rights, not all operations may be possible.\n\n## API structure\nThe Oneprovider API reflects the fact that most operations deal directly\nwith virtual file paths relative to user spaces, which are provided as part\nof the paths in the REST calls.\n\nThe API provides the following functionality:\n\n### Data\n\n#### File information\nThe `/data/` path methods provide basic capability for:\n  - browsing files in spaces and directories,\n  - querying for file attributes, such as 'mode' file permissions and updating them,\n  - managing file metadata.\n\n#### Share information\nThe `/share/` methods enable creating, modyfying and deleting shares.\nShares are directories that were made publicly available, so they can be viewed by everyone\nthrough public URL.\n\n#### Space information\nThe `/space/` methods provide means for getting basic information about\nspaces directly from the Oneprovider service but also allows to define views and\nlist transfers for specified space.\n\n### Replication\n\n#### Replica management\nThe `/replicas/` methods allow retrieving information about file replica distribution\namong Onedata providers as well as requesting specific file replication to selected\nproviders.\n\n#### Transfer management\nThe `/transfer/` operations provide basic transfer management functionality based on the Id of transfer\nreturned by `/replicas/{path} [POST]` operation.\n\n### Monitoring\n\n#### Changes subscription\nThe `/changes/` method group provides means for subscribing (through HTTP long-polling technique) for\nfile related events such as reads, writes or deletes which are returned as complete file metadata\nrecords with sequence numbers representing their current version.\n\n#### Monitoring metrics\nThe `/metrics/` operations enable retrieval of internal Oneprovider monitoring data.\nAll monitoring data is returned in the form of [RRD](http://oss.oetiker.ch/rrdtool/)\ndatabase files, with resolution determined by the `step` query parameter.\n\n## Examples\n\n**Create replica of file at specific storage provider**\n```bash\ncurl -v --tlsv1.2 -H \"X-Auth-Token: $TOKEN\" -X POST \\\n\"https://$PROVIDER/api/v3/oneprovider/replicas/MySpace1/MyFile2.txt?provider_id=$PROVIDER_ID\"\n```\n\n**Get space storage qouta metric**\n```bash\ncurl -v --tlsv1.2 -H \"X-Auth-Token: $TOKEN\" -X GET \\\n\"https://$PROVIDER/api/v3/oneprovider/metrics/space/MySpace1?metric=storage_qouta\"\n```\n\nMore detailed examples are available in the documentation of each operation.\n",
    "contact": {
      "name": "Onedata support",
      "url": "https://onedata.org/support",
      "email": "info@onedata.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://onedata.org/assets/images/api/oneprovider-logo.svg",
      "backgroundColor": "#FFFFFF"
    }
  },
  "paths": {
    "/configuration": {
      "get": {
        "operationId": "get_configuration",
        "x-onedata-gri": {
          "type": "op_provider",
          "aspect": "configuration",
          "scope": "public"
        },
        "summary": "Get public information",
        "tags": [
          "Oneprovider"
        ],
        "x-bash-codegen-description": "Returns public information about the Oneprovider service.\n\nThis endpoint does not require authentication.\n",
        "description": "Returns public information about the Oneprovider service.\n\nThis endpoint does not require authentication.\n\n***Example cURL requests***\n\n**Get public information about the Oneprovider service**\n```bash\ncurl \"https://$HOST/api/v3/oneprovider/configuration\"\n\n{\n  \"providerId\": \"c4798eb2dbd2486fae940e6fa0a5071d\",\n  \"name\": \"ProviderName\",\n  \"domain\": \"zone.domain.org\",\n  \"onezoneDomain\": \"example.domain.org\",\n  \"version\": \"R14B04\",\n  \"build\": \"14-g0d0fd5b\",\n  \"compatibleOnezoneVersions\": [\"R13B04, R14B04\"],\n  \"compatibleOneproviderVersions\": [\"R14B04\"],\n  \"compatibleOneclientVersions\": [\"R14B04\"]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Configuration returned successfully.",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getConfiguration"
          }
        ]
      }
    },
    "/test_image": {
      "get": {
        "operationId": "test_image",
        "x-onedata-gri": {
          "type": "op_provider",
          "aspect": "test_image",
          "scope": "public"
        },
        "summary": "Get test image",
        "tags": [
          "Oneprovider"
        ],
        "x-bash-codegen-description": "This endpoint returns a dummy image in `.png` format. It is used internally\nby web applications across Onedata to check connectivity with certain services.\nThis endpoint does not require authentication.\n",
        "description": "This endpoint returns a dummy image in `.png` format. It is used internally\nby web applications across Onedata to check connectivity with certain services.\nThis endpoint does not require authentication.\n",
        "produces": [
          "image/png"
        ],
        "responses": {
          "200": {
            "description": "Test image."
          },
          "500": {
            "description": "Internal server Error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/lookup-file-id/{path}": {
      "post": {
        "operationId": "lookup_file_id",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "object_id"
        },
        "tags": [
          "File Path"
        ],
        "summary": "Lookup file id",
        "x-bash-codegen-description": "Returns Id of file or directory specified by path.\n",
        "description": "Returns Id of file or directory specified by path.\n\n***Example cURL requests***\n\n**Lookup file id**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/lookup-file-id/MySpace/dir/readme.txt\"\n\n{\n  \"fileId\": \"094576776E667431723230677767776C6B497031394E445F6E3868677873\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "File Id.",
            "schema": {
              "type": "object",
              "properties": {
                "fileId": {
                  "type": "string",
                  "description": "File Id."
                }
              },
              "required": [
                "fileId"
              ],
              "example": {
                "fileId": "094576776E667431723230677767776C6B497031394E445F6E3868677873"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Invalid path - file or directory not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File path (e.g. '/MySpace/dir/readme.txt')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli lookupFileId path='/MySpace/dir/readme.txt'"
          }
        ]
      }
    },
    "/data/{id}": {
      "get": {
        "operationId": "get_attrs",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "attrs"
        },
        "summary": "Get file attributes",
        "tags": [
          "File Data"
        ],
        "x-bash-codegen-description": "This method returns either all or only selected basic attributes associated\nwith specified file, directory or space.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method returns either all or only selected basic attributes associated\nwith specified file, directory or space.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Get file size**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/data/$FILE_ID?attribute=size\"\n\n{\n  \"size\": 100\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the requested file attributes.",
            "schema": {
              "$ref": "#/definitions/FileAttributes"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File, directory or space Id",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "query",
            "description": "Name of attribute to query for. When accessing file via share mode following attributes are unavailable: `owner_id`, `storage_group_id`, `storage_user_id`, `provider_id`\n",
            "type": "string",
            "enum": [
              "name",
              "owner_id",
              "type",
              "mode",
              "size",
              "atime",
              "mtime",
              "ctime",
              "storage_group_id",
              "storage_user_id",
              "shares",
              "provider_id",
              "file_id"
            ],
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getAttrs id=$FILE_ID"
          }
        ]
      },
      "put": {
        "operationId": "set_attr",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "attrs"
        },
        "summary": "Set file attribute",
        "tags": [
          "File Data"
        ],
        "x-bash-codegen-description": "This method allows to set a value of a regular file attribute.\n\nCurrently only POSIX mode can be changed by\nsending:\n```\n  { \"mode\": \"0777\" }\n```\nwhere the POSIX mode is specified in octal notation.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method allows to set a value of a regular file attribute.\n\nCurrently only POSIX mode can be changed by sending:\n  ```\n  { \"mode\": \"0777\" }\n  ```\nwhere the POSIX mode is specified in octal notation.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Set file POSIX mode**\n```bash\ncurl -X PUT -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"mode\": \"0777\" }'\n\"https://$HOST/api/v3/oneprovider/data/$FILE_ID\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "File attributes updated successfuly."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File, directory or space Id",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "body",
            "description": "Attribute name and value.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"mode\": \"0777\"}' | oneprovider-rest-cli setAttr id=$FILE_ID -"
          }
        ]
      }
    },
    "/data/{id}/children": {
      "get": {
        "operationId": "list_children",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "children"
        },
        "tags": [
          "File Data"
        ],
        "summary": "List directory files and subdirectories",
        "x-bash-codegen-description": "Returns the list of directory files and subdirectories.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "Returns the list of directory files and subdirectories.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Get files in space subdirectory**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/data/$DIR_ID\"\n\n{\n  \"children\": [\n    {\n      \"id\": \"YzQ3OThlYjItZGJkMi00ODZmLWFlOTQtMGU2ZmEwYTUwNzFk\",\n      \"name\": \"File1.txt\"\n    },\n    {\n      \"id\": \"NjIwZTE2NDItNGYyZC00NWYyLWI0ZWItMzdmOGE5NThiNDZm\",\n      \"name\": \"Dir2\"\n    }\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of directory files and subdirectories.",
            "schema": {
              "$ref": "#/definitions/DirectoryChildren"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Invalid path - file or directory not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the directory.",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Allows to specify maximum number of files that should be returned. If there are more files, they can be retrieved using `index` and `offset` query parameters.\n",
            "type": "integer",
            "required": false,
            "maximum": 1000,
            "minimum": 1,
            "default": 1000
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the partial result, can be used to get subset of the result, when the number of files and directories under given path exceeds 1000.\n",
            "type": "integer",
            "required": false,
            "default": 0
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli listChildren id=$FILE_ID limit=100 offset=300"
          }
        ]
      }
    },
    "/data/{id}/metadata/json": {
      "get": {
        "operationId": "get_json_metadata",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "json_metadata"
        },
        "summary": "Get file json metadata",
        "tags": [
          "File Metadata"
        ],
        "x-bash-codegen-description": "This method returns the json metadata associated with specified file, directory or space.\n\nBy default the method returns the complete json metadata. But it is possible to request\nonly a part of the document by specifying `filter_type` and `filter` attributes in the query.\n\nSupported filter types are:\n  * **keypath** - list of JSON keys which point to requested JSON object,\n                separated by `.`, array elements should be expressed as\n                `[i]` (e.g. `key1.key2.[2].key3`)\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method returns the json metadata associated with specified file, directory or space.\n\nBy default the method returns the complete json metadata. But it is possible to request\nonly a part of the document by specifying `filter_type` and `filter` attributes in the query.\n\nSupported filter types are:\n  * **keypath** - list of JSON keys which point to requested JSON object,\n                separated by `.`, array elements should be expressed as\n                `[i]` (e.g. `key1.key2.[2].key3`)\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Get specific JSON value from metadata document**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/json?filter_type=keypath&filter=key1.key2.[2].key3\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON metadata returned successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "The type of filter to apply to the metadata document.",
            "type": "string",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter to apply to the metadata document before returning.",
            "type": "string",
            "required": false
          },
          {
            "name": "inherited",
            "in": "query",
            "description": "When set to true, this operation will merge the metadata documents from parent directories as well as entire space into a single JSON document.\n",
            "type": "boolean",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getJsonMetadata id=$FILE_ID inherited=false"
          }
        ]
      },
      "put": {
        "operationId": "set_json_metadata",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "json_metadata"
        },
        "summary": "Set file json metadata",
        "tags": [
          "File Metadata"
        ],
        "x-bash-codegen-description": "This method allows to set json metadata for a file, directory or space.\n\nThis operation will replace the previous json metadata if any.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method allows to set json metadata for a file, directory or space.\n\nThis operation will replace the previous json metadata if any.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Set JSON metadata for file**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/json\" \\\n-d '{ \"key1\": { \"key2\": [\"val1\", \"val2\", \"val3\", \"val4\"] } }'\nhttps://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/json\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "JSON metadata updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "The type of filter to apply to the metadata document.",
            "type": "string",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter allowing to set specific metadata document key. Required if filter_type is specified.",
            "type": "string",
            "required": false
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "The json metadata.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat metadata.json | oneprovider-rest-cli setJsonMetadata id=$FILE_ID -"
          }
        ]
      }
    },
    "/data/{id}/metadata/rdf": {
      "get": {
        "operationId": "get_rdf_metadata",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "rdf_metadata"
        },
        "summary": "Get file rdf metadata",
        "tags": [
          "File Metadata"
        ],
        "x-bash-codegen-description": "This method returns the rdf metadata for specified file, directory or space.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method returns the rdf metadata for specified file, directory or space.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Get complete RDF metadata document for file**\n\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/rdf\n\n<RDF><homepage>https://www.onedata.org</homepage></RDF>\n```\n",
        "produces": [
          "application/rdf+xml"
        ],
        "responses": {
          "200": {
            "description": "Rdf metadata returned successfully.",
            "schema": {
              "type": "string",
              "example": "<RDF><homepage>https://www.onedata.org</homepage></RDF>"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getRdfMetadata id=$FILE_ID"
          }
        ]
      },
      "put": {
        "operationId": "set_rdf_metadata",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "rdf_metadata"
        },
        "summary": "Set file rdf metadata",
        "tags": [
          "File Metadata"
        ],
        "x-bash-codegen-description": "This method allows to set specific rdf metadata for a file, directory or space.\n\nThis operation will replace the previous rdf metadata if any.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method allows to set specific rdf metadata for a file, directory or space.\n\nThis operation will replace the previous rdf metadata if any.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Set RDF metadata for space from RDF file**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/rdf+xml\" \\\n-d \"@./space1_dublincore.rdf\"\nhttps://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/rdf\n```\n",
        "consumes": [
          "application/rdf+xml"
        ],
        "responses": {
          "204": {
            "description": "Rdf metadata updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "The rdf metadata.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat metadata.rdf | oneprovider-rest-cli setRdfMetadata id=$FILE_ID -"
          }
        ]
      }
    },
    "/data/{id}/metadata/xattrs": {
      "get": {
        "operationId": "get_xattrs",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "xattrs"
        },
        "summary": "Get file extended attributes",
        "tags": [
          "File Metadata"
        ],
        "x-bash-codegen-description": "This method returns the selected extended attributes associated with specified file,\ndirectory or space.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method returns the selected extended attributes associated with specified file,\ndirectory or space.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Get extended file attributes**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\n\"https://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/xattrs?attribute=license&attribute=blocks\"\n\n{\n  \"license\": \"CC-0\",\n  \"blocks\": 3\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the requested file extended attributes.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "query",
            "description": "Name of attribute to query for.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "required": false
          },
          {
            "name": "inherited",
            "in": "query",
            "description": "When set to true, this operation returns attributes including those inherited from parent directories and from the space root directory. If the same attribute is set on different nesting levels, the lowest level takes precedence (e.g. file attributes override the attributes from its parent directory).\n",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "name": "show_internal",
            "in": "query",
            "description": "When set to true, this operation returns all attributes including those normally not shown (e.g. json/rdf metadata, acl and cdmi attributes).\n",
            "type": "boolean",
            "default": false,
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getXattrs id=$FILE_ID"
          }
        ]
      },
      "put": {
        "operationId": "set_xattr",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "xattrs"
        },
        "summary": "Set file extended attribute",
        "tags": [
          "File Metadata"
        ],
        "x-bash-codegen-description": "This method allows to set a value of a specified extended file attribute\nleaving other ones intact.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "This method allows to set a value of a specified extended file attribute\nleaving other ones intact.\n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Set extended file attribute**\n```bash\ncurl -X PUT -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"license\": \"CC-0\" }' \\\n\"https://$HOST/api/v3/oneprovider/data/$FILE_ID/metadata/xattrs\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "File extended attributes updated successfuly."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Extended attribute name and value.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli setXattr id=$FILE_ID license==CC-0"
          }
        ]
      }
    },
    "/files/{path}": {
      "get": {
        "deprecated": true,
        "operationId": "list_files",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "list"
        },
        "tags": [
          "Deprecated File"
        ],
        "summary": "List files and directories (deprecated)",
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/list_dir_children).\n\nReturns the list of directories and files directly under specified path.\n\nIf the path points to a file, the result array will consist only of the\nsingle item with the path to the file requested, confirming it exists.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/list_dir_children).\n\nReturns the list of directories and files directly under specified path.\n\nIf the path points to a file, the result array will consist only of the\nsingle item with the path to the file requested, confirming it exists.\n\n***Example cURL requests***\n\n**Get files in space subdirectory**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/files/MySpace1/MyDir2\"\n\n[\n  {\n    \"id\": \"c4798eb2-dbd2-486f-ae94-0e6fa0a5071d\",\n    \"path\": \"/MySpace1/MyDir2/File1.txt\"\n  },\n  {\n    \"id\": \"620e1642-4f2d-45f2-b4eb-37f8a958b46f\",\n    \"path\": \"/MySpace1/MyDir2/Dir3\"\n  },\n  {\n    \"id\": \"55ac4ed3-a723-47ab-a892-638578b9cad7\",\n    \"path\": \"/MySpace1/MyDir2/File3.txt\"\n  }\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of files and directories under specified path.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilePath"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Invalid path - file or directory not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "Directory path (e.g. '/MySpace/testfiles')",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Allows to specify maximum number of files that should be returned. If there are more files, they can be retrieved using `offset` query parameter.\n",
            "type": "integer",
            "required": false,
            "maximum": 1000,
            "minimum": 1,
            "default": 1000
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the partial result, can be used to get subset of the result, when the number of files and directories under given path exceeds 1000.\n",
            "type": "integer",
            "required": false,
            "minimum": 0
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli listFiles path='/MySpace/testfiles' limit=100 offset=300"
          }
        ]
      }
    },
    "/files-id/{id}": {
      "get": {
        "deprecated": true,
        "operationId": "list_files_by_id",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "list"
        },
        "tags": [
          "Deprecated File"
        ],
        "summary": "List files and directories by Id (deprecated)",
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/list_dir_children).\n\nReturns the list of directories and files directly under directory specified by Id.\n\nIf the Id points to a file, the result array will consist only of the\nsingle item with the path to the file requested, confirming it exists.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/list_dir_children).\n\nReturns the list of directories and files directly under directory specified by Id.\n\nIf the Id points to a file, the result array will consist only of the\nsingle item with the path to the file requested, confirming it exists.\n\n***Example cURL requests***\n\n**Get files in space subdirectory**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/files-id/$FILE_ID\"\n\n[\n  {\n    \"id\": \"c4798eb2-dbd2-486f-ae94-0e6fa0a5071d\",\n    \"path\": \"/MySpace1/MyDir2/File1.txt\"\n  },\n  {\n    \"id\": \"620e1642-4f2d-45f2-b4eb-37f8a958b46f\",\n    \"path\": \"/MySpace1/MyDir2/Dir33\"\n  },\n  {\n    \"id\": \"55ac4ed3-a723-47ab-a892-638578b9cad7\",\n    \"path\": \"/MySpace1/MyDir2/File3.txt\"\n  }\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of files and directories under specified path.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilePath"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Invalid path - file or directory not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Allows to specify maximum number of files that should be returned. If there are more files, they can be retrieved using `offset` query parameter.\n",
            "type": "integer",
            "required": false,
            "maximum": 1000,
            "minimum": 1,
            "default": 1000
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the partial result, can be used to get subset of the result, when the number of files and directories under given path exceeds 1000.\n",
            "type": "integer",
            "required": false,
            "minimum": 0
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli listFilesById id=$FILE_ID limit=100 offset=300"
          }
        ]
      }
    },
    "/file-shares/{path}": {
      "get": {
        "deprecated": true,
        "operationId": "list_file_shares_by_path",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "shares"
        },
        "tags": [
          "Deprecated File"
        ],
        "summary": "List file shares by path (deprecated)",
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nReturns the list of shares associated with specified by path file or directory.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nReturns the list of shares associated with specified by path file or directory.\n\n***Example cURL requests***\n\n**List shares associated with specified file or directory**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/file-shares/MySpace/testfile\"\n\n{\n  \"shares\": [\n    $SHARE_ID1,\n    $SHARE_ID2,\n    $SHARE_ID3\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of share Ids associated with this file or directory.",
            "schema": {
              "$ref": "#/definitions/Shares"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Invalid path - file or directory not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path (e.g. '/MySpace/testfile')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli listFileSharesByPath path='MySpace/testfile'"
          }
        ]
      }
    },
    "/file-id-shares/{id}": {
      "get": {
        "deprecated": true,
        "operationId": "list_file_shares_by_id",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "shares"
        },
        "tags": [
          "Deprecated File"
        ],
        "summary": "List file shares by Id (deprecated)",
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nReturns the list of shares associated with specified by Id file or directory.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nReturns the list of shares associated with specified by Id file or directory.\n\n***Example cURL requests***\n\n**List shares associated with specified file or directory**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/file-id-shares/$FILE_ID\"\n\n{\n  \"shares\": [\n    $SHARE_ID1,\n    $SHARE_ID2,\n    $SHARE_ID3\n  ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of share Ids associated with this file or directory.",
            "schema": {
              "$ref": "#/definitions/Shares"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Invalid path - file or directory not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file or directory.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli listFileSharesById id=$FILE_ID"
          }
        ]
      }
    },
    "/metadata/attrs/{path}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_attrs",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "attrs"
        },
        "summary": "Get file attributes (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nThis method returns the selected attributes associated with specified file, directory or space.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nThis method returns the selected attributes associated with specified file, directory or space.\n\n***Example cURL requests***\n\n**Get file POSIX mode**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/metadata/attrs/MySpace1/File2.txt?attribute=mode\"\n\n{\n  \"mode\": \"0777\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the requested file attributes.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "query",
            "description": "Type of attribute to query for.",
            "type": "string",
            "required": false,
            "enum": [
              "name",
              "owner_id",
              "type",
              "mode",
              "size",
              "atime",
              "mtime",
              "ctime",
              "storage_group_id",
              "storage_user_id",
              "shares",
              "file_id"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileAttrs path='/MySpace/testfiles/file1.txt'"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_attr",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "attrs"
        },
        "summary": "Set file attribute (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/set_attr).\n\nThis method allows to set a value of a regular file attribute.\n\nCurrently only POSIX mode can be changed by\nsending:\n```\n  { \"mode\": \"0777\" }\n```\nwhere the POSIX mode is specified in octal notation.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/set_attr).\n\nThis method allows to set a value of a regular file attribute.\n\nCurrently only POSIX mode can be changed by sending:\n  ```\n  { \"mode\": \"0777\" }\n  ```\nwhere the POSIX mode is specified in octal notation.\n\n***Example cURL requests***\n\n**Set file POSIX mode**\n```bash\ncurl -X PUT -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"mode\": \"0777\" }'\n\"https://$HOST/api/v3/oneprovider/metadata/attrs/MySpace1/File2.txt\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "File attributes updated successfuly."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "body",
            "description": "Attribute name and value.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"mode\": \"0777\"}' | oneprovider-rest-cli setFileAttr path='/MySpace/testfiles/file1.txt' -"
          }
        ]
      }
    },
    "/metadata/xattrs/{path}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_xattrs",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "xattrs"
        },
        "summary": "Get file extended attributes (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_xattrs).\n\nThis method returns the selected extended attributes associated with specified file, directory or space.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_xattrs).\n\nThis method returns the selected extended attributes associated with specified file, directory or space.\n\n***Example cURL requests***\n\n**Get extended file attributes**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\n\"https://$HOST/api/v3/oneprovider/metadata/xattrs/MySpace1/File2.txt?extended=true&attribute=license\"\n\n{\n  \"license\": \"CC-0\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the requested file extended attributes.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "query",
            "description": "Type of attribute to query for.",
            "type": "string",
            "required": false
          },
          {
            "name": "inherited",
            "in": "query",
            "description": "When set to true, this operation returns attributes including those inherited from parent directories and from the space root directory. If the same attribute is set on different nesting levels, the lowest level takes precedence (e.g. file attributes override the attributes from its parent directory).\n",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "name": "show_internal",
            "in": "query",
            "description": "When set to true, this operation returns all attributes including those normally not shown (e.g. json/rdf metadata, acl and cdmi attributes).\n",
            "type": "boolean",
            "default": false,
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileXattrs path='/MySpace/testfiles/file1.txt'"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_xattr",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "xattrs"
        },
        "summary": "Set file extended attribute (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/set_xattr).\n\nThis method allows to set a value of a specified extended file attribute\nleaving other ones intact.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/set_xattr).\n\nThis method allows to set a value of a specified extended file attribute\nleaving other ones intact.\n\n***Example cURL requests***\n\n**Set extended file attribute**\n```bash\ncurl -X PUT -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"license\": \"CC-0\" }' \\\n\"https://$HOST/api/v3/oneprovider/metadata/xattrs/MySpace1/File2.txt?extended=true\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "File extended attributes updated successfuly."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Extended attribute name and value.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli setFileXattr path='/MySpace/testfiles/file1.txt' license==CC-0"
          }
        ]
      }
    },
    "/metadata/json/{path}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_json_metadata",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "json_metadata"
        },
        "summary": "Get file json metadata (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_json_metadata).\n\nThis method returns the json metadata associated with specified file, directory or space.\n\nBy default the method returns the complete json metadata. But it is possible to request\nonly a part of the document by specifying `filter_type` and `filter` attributes in the query.\n\nSupported filter types are:\n  * **keypath** - list of JSON keys which point to requested JSON object,\n                separated by `.`, array elements should be expressed as\n                `[i]` (e.g. `key1.key2.[2].key3`)\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_json_metadata).\n\nThis method returns the json metadata associated with specified file, directory or space.\n\nBy default the method returns the complete json metadata. But it is possible to request\nonly a part of the document by specifying `filter_type` and `filter` attributes in the query.\n\nSupported filter types are:\n  * **keypath** - list of JSON keys which point to requested JSON object,\n                separated by `.`, array elements should be expressed as\n                `[i]` (e.g. `key1.key2.[2].key3`)\n\n\n***Example cURL requests***\n\n**Get specific JSON value from metadata document**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/metadata/json/MySpace1/File2.txt?filter_type=keypath&filter=key1.key2.[2].key3\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON metadata returned successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "The type of filter to apply to the metadata document.",
            "type": "string",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter to apply to the metadata document before returning.",
            "type": "string",
            "required": false
          },
          {
            "name": "inherited",
            "in": "query",
            "description": "When set to true, this operation will merge the metadata documents from parent directories as well as entire space into a single JSON document.\n",
            "type": "boolean",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileJsonMetadata path='/MySpace/testfiles/file1.txt' inherited=false"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_json_metadata",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "json_metadata"
        },
        "summary": "Set file json metadata (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/set_json_metadata).\n\nThis method allows to set json metadata for a file, directory or\nspace specified in the request path.\n\nThis operation will replace the previous json metadata if any.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/set_json_metadata).\n\nThis method allows to set json metadata for a file, directory or\nspace specified in the request path.\n\nThis operation will replace the previous json metadata if any.\n\n***Example cURL requests***\n\n**Set JSON metadata for file**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/json\" \\\n-d '{ \"key1\": { \"key2\": [\"val1\", \"val2\", \"val3\", \"val4\"] } }'\nhttps://$HOST/api/v3/oneprovider/metadata/json/MySpace1/File2.txt\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "JSON metadata updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "The type of filter to apply to the metadata document.",
            "type": "string",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter allowing to set specific metadata document key. Required if filter_type is specified.",
            "type": "string",
            "required": false
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "The json metadata.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat metadata.json | oneprovider-rest-cli setFileJsonMetadata path='/MySpace/testfiles/file1.txt' -"
          }
        ]
      }
    },
    "/metadata/rdf/{path}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_rdf_metadata",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "rdf_metadata"
        },
        "summary": "Get file rdf metadata (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_rdf_metadata).\n\nThis method returns the rdf metadata associated with specified file, directory or space.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_rdf_metadata).\n\nThis method returns the rdf metadata associated with specified file, directory or space.\n\n***Example cURL requests***\n\n**Get complete RDF metadata document for File2.txt**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/metadata/rdf/MySpace1/File2.txt\n```\n",
        "produces": [
          "application/rdf+xml"
        ],
        "responses": {
          "200": {
            "description": "Rdf metadata returned successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileRdfMetadata path='/MySpace/testfiles/file1.txt'"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_rdf_metadata",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?PATH_BINDING",
          "aspect": "rdf_metadata"
        },
        "summary": "Set file rdf metadata (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/set_rdf_metadata).\n\nThis method allows to set specific rdf metadata for a file, directory or\nspace specified in the request path.\n\nThis operation will replace the previous rdf metadata if any.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/set_rdf_metadata).\n\nThis method allows to set specific rdf metadata for a file, directory or\nspace specified in the request path.\n\nThis operation will replace the previous rdf metadata if any.\n\n***Example cURL requests***\n\n**Set RDF metadata for space from RDF file**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/rdf+xml\" \\\n-d \"@./space1_dublincore.rdf\"\nhttps://$HOST/api/v3/oneprovider/metadata/rdf/MySpace1\n```\n",
        "consumes": [
          "application/rdf+xml"
        ],
        "responses": {
          "204": {
            "description": "Rdf metadata updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File or directory path or space name (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "The rdf metadata.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat metadata.rdf | oneprovider-rest-cli setFileRdfMetadata path='/MySpace/testfiles/file1.txt' -"
          }
        ]
      }
    },
    "/metadata-id/attrs/{id}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_attrs_by_id",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "attrs"
        },
        "summary": "Get file attributes by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nThis method returns the selected attributes associated with specified file, directory or space by Id.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_attrs).\n\nThis method returns the selected attributes associated with specified file, directory or space by Id.\n\n***Example cURL requests***\n\n**Get file POSIX mode**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/metadata-id/attrs/$FILE_ID?attribute=mode\"\n\n{\n  \"mode\": \"0777\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the requested file attributes.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File, directory or space Id",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "query",
            "description": "Type of attribute to query for.",
            "type": "string",
            "required": false,
            "enum": [
              "name",
              "owner_id",
              "type",
              "mode",
              "size",
              "atime",
              "mtime",
              "ctime",
              "storage_group_id",
              "storage_user_id",
              "shares",
              "file_id"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileAttrsById id=$FILE_ID"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_attr_by_id",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "attrs"
        },
        "summary": "Set file attribute by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/set_attr).\n\nThis method allows to set a value of a regular file attribute.\n\nCurrently only POSIX mode can be changed by\nsending:\n```\n  { \"mode\": \"0777\" }\n```\nwhere the POSIX mode is specified in octal notation.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/set_attr).\n\nThis method allows to set a value of a regular file attribute.\n\nCurrently only POSIX mode can be changed by sending:\n  ```\n  { \"mode\": \"0777\" }\n  ```\nwhere the POSIX mode is specified in octal notation.\n\n***Example cURL requests***\n\n**Set file POSIX mode**\n```bash\ncurl -X PUT -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"mode\": \"0777\" }'\n\"https://$HOST/api/v3/oneprovider/metadata-id/attrs/$FILE_ID\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "File attributes updated successfuly."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File, directory or space Id",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "body",
            "description": "Attribute name and value.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "echo '{\"mode\": \"0777\"}' | oneprovider-rest-cli setFileAttrById id=$FILE_ID -"
          }
        ]
      }
    },
    "/metadata-id/xattrs/{id}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_xattrs_by_id",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "xattrs"
        },
        "summary": "Get file extended attributes by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_xattrs).\n\nThis method returns the selected extended attributes associated with specified file, directory or space by Id.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_xattrs).\n\nThis method returns the selected extended attributes associated with specified file, directory or space by Id.\n\n***Example cURL requests***\n\n**Get extended file attributes**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\n\"https://$HOST/api/v3/oneprovider/metadata-id/xattrs/$FILE_ID?extended=true&attribute=license\"\n\n{\n  \"license\": \"CC-0\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns the requested file extended attributes.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "attribute",
            "in": "query",
            "description": "Type of attribute to query for.",
            "type": "string",
            "required": false
          },
          {
            "name": "inherited",
            "in": "query",
            "description": "When set to true, this operation returns attributes including those inherited from parent directories and from the space root directory. If the same attribute is set on different nesting levels, the lowest level takes precedence (e.g. file attributes override the attributes from its parent directory).\n",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "name": "show_internal",
            "in": "query",
            "description": "When set to true, this operation returns all attributes including those normally not shown (e.g. json/rdf metadata, acl and cdmi attributes).\n",
            "type": "boolean",
            "default": false,
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileXattrsById id=$FILE_ID"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_xattr_by_id",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "xattrs"
        },
        "summary": "Set file extended attribute by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/set_xattr).\n\nThis method allows to set a value of a specified extended file attribute\nleaving other ones intact.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/set_xattr).\n\nThis method allows to set a value of a specified extended file attribute\nleaving other ones intact.\n\n***Example cURL requests***\n\n**Set extended file attribute**\n```bash\ncurl -X PUT -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"license\": \"CC-0\" }' \\\n\"https://$HOST/api/v3/oneprovider/metadata-id/xattrs/$FILE_ID?extended=true\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "File extended attributes updated successfuly."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Extended attribute name and value.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli setFileXattrById id=$FILE_ID license==CC-0"
          }
        ]
      }
    },
    "/metadata-id/json/{id}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_json_metadata_by_id",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "json_metadata"
        },
        "summary": "Get file json metadata by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_json_metadata).\n\nThis method returns the json metadata associated with specified file, directory or space by Id.\n\nBy default the method returns the complete json metadata. But it is possible to request\nonly a part of the document by specifying `filter_type` and `filter` attributes in the query.\n\nSupported filter types are:\n  * **keypath** - list of JSON keys which point to requested JSON object,\n                separated by `.`, array elements should be expressed as\n                `[i]` (e.g. `key1.key2.[2].key3`)\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_json_metadata).\n\nThis method returns the json metadata associated with specified file, directory or space by Id.\n\nBy default the method returns the complete json metadata. But it is possible to request\nonly a part of the document by specifying `filter_type` and `filter` attributes in the query.\n\nSupported filter types are:\n  * **keypath** - list of JSON keys which point to requested JSON object,\n                separated by `.`, array elements should be expressed as\n                `[i]` (e.g. `key1.key2.[2].key3`)\n\n\n***Example cURL requests***\n\n**Get specific JSON value from metadata document**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/metadata-id/json/$FILE_ID?filter_type=keypath&filter=key1.key2.[2].key3\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON metadata returned successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "The type of filter to apply to the metadata document.",
            "type": "string",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter to apply to the metadata document before returning.",
            "type": "string",
            "required": false
          },
          {
            "name": "inherited",
            "in": "query",
            "description": "When set to true, this operation will merge the metadata documents from parent directories as well as entire space into a single JSON document.\n",
            "type": "boolean",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileJsonMetadataById id=$FILE_ID inherited=false"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_json_metadata_by_id",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "json_metadata"
        },
        "summary": "Set file json metadata by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/set_json_metadata).\n\nThis method allows to set json metadata for a file, directory or\nspace specified by Id.\n\nThis operation will replace the previous json metadata if any.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/set_json_metadata).\n\nThis method allows to set json metadata for a file, directory or\nspace specified by Id.\n\nThis operation will replace the previous json metadata if any.\n\n***Example cURL requests***\n\n**Set JSON metadata for file**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/json\" \\\n-d '{ \"key1\": { \"key2\": [\"val1\", \"val2\", \"val3\", \"val4\"] } }'\nhttps://$HOST/api/v3/oneprovider/metadata-id/json/$FILE_ID\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "JSON metadata updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "The type of filter to apply to the metadata document.",
            "type": "string",
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The filter allowing to set specific metadata document key. Required if filter_type is specified.",
            "type": "string",
            "required": false
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "The json metadata.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat metadata.json | oneprovider-rest-cli setFileJsonMetadataById id=$FILE_ID -"
          }
        ]
      }
    },
    "/metadata-id/rdf/{id}": {
      "get": {
        "deprecated": true,
        "operationId": "get_file_rdf_metadata_by_id",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "rdf_metadata"
        },
        "summary": "Get file rdf metadata by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_rdf_metadata).\n\nThis method returns the rdf metadata for specified file, directory or space by Id.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_rdf_metadata).\n\nThis method returns the rdf metadata for specified file, directory or space by Id.\n\n***Example cURL requests***\n\n**Get complete RDF metadata document for file**\n\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/metadata-id/rdf/$FILE_ID\n```\n",
        "produces": [
          "application/rdf+xml"
        ],
        "responses": {
          "200": {
            "description": "Rdf metadata returned successfully.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileRdfMetadataById id=$FILE_ID"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "set_file_rdf_metadata_by_id",
        "x-onedata-parse_body": "{as_is, <<\"metadata\">>}",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "rdf_metadata"
        },
        "summary": "Set file rdf metadata by Id (deprecated)",
        "tags": [
          "Deprecated File"
        ],
        "description": "This enpoint is deprecated, please use [this one](#operation/set_rdf_metadata).\n\nThis method allows to set specific rdf metadata for a file, directory or space specified by Id in the request path.\n\nThis operation will replace the previous rdf metadata if any.\n\n***Example cURL requests***\n\n**Set RDF metadata for space from RDF file**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/rdf+xml\" \\\n-d \"@./space1_dublincore.rdf\"\nhttps://$HOST/api/v3/oneprovider/metadata-id/rdf/$FILE_ID\n```\n",
        "consumes": [
          "application/rdf+xml"
        ],
        "responses": {
          "204": {
            "description": "Rdf metadata updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "The rdf metadata.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat metadata.rdf | oneprovider-rest-cli setFileRdfMetadataById id=$FILE_ID -"
          }
        ]
      }
    },
    "/shares": {
      "post": {
        "operationId": "create_share",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_share",
          "aspect": "instance"
        },
        "summary": "Create share",
        "tags": [
          "Share"
        ],
        "x-bash-codegen-description": "Shares a file or a directory. Shared files can be viewed by everyone through public URL.\nThis operation assigns a share Id that can be used to manage share, see:\n  * [Get basic information about share](#operation/get_share)\n  * [List shares associated with file or directory](#operation/list_file_shares_by_id)\n  * [Change name of the share](#operation/update_share)\n  * [Remove share](#operation/remove_share)\n\nAny number of shares can be associated with each file or directory.\n",
        "description": "Shares a file or a directory. Shared files can be viewed by everyone through public URL.\nThis operation assigns a share Id that can be used to manage share, see:\n  * [Get basic information about share](#operation/get_share)\n  * [List shares associated with file or directory](#operation/list_file_shares_by_id)\n  * [Change name of the share](#operation/update_share)\n  * [Remove share](#operation/remove_share)\n\nAny number of shares can be associated with each file or directory.\n\n***Example cURL requests***\n\n**Creates share**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X POST \\\n-H \"Content-type: application/json\" \\\n-d '{ \"name\": \"MyShare\", \"fileId\": $FILE_ID }' \\\n\"https://$HOST/api/v3/oneprovider/shares\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The request has been accepted and the result is the share Id. Also URI of the Share in form https://$HOST/api/v3/oneprovider/shares/{id} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "URI of the Share.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "shareId": {
                  "type": "string",
                  "description": "Share Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Share properties.",
            "schema": {
              "$ref": "#/definitions/ShareCreateRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli createShare name==MyShare fileId==$FILE_ID"
          }
        ]
      }
    },
    "/shares/{shid}": {
      "get": {
        "operationId": "get_share",
        "x-onedata-gri": {
          "type": "op_share",
          "id": "?BINDING(shid)",
          "aspect": "instance"
        },
        "summary": "Get share info",
        "tags": [
          "Share"
        ],
        "x-bash-codegen-description": "Returns the basic information about share.\n",
        "description": "Returns the basic information about share.\n\n***Example cURL requests***\n\n**Returns the basic information about share**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/shares/$SHARE_ID\"\n\n{\n  \"shareId\": \"1f4b762b1380946e73aeca574c77f14c\",\n  \"name\": \"MyNewShare\",\n  \"publicUrl\": \"https://onedata.org/shares/1f4b762b1380946e73aeca574c77f14c\",\n  \"fileType\": \"dir\",\n  \"rootFileId\": \"00000000006CB663736861726547756964233339643236366165646365\\\n  6266666164353939663761373734313235363166342336656331613534313362366634653\\\n  2623031613563383561386664373937653223316634623736326231333830393436653733\\\n  6165636135373463373766313463\",\n  \"spaceId\": \"6ec1a5413b6f4e2b01a5c85a8fd797e2\",\n  \"handleId\" \"doi:10.15911/MyShares.726855\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The share information.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File or share not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "shid",
            "in": "path",
            "description": "Share Id (e.g. '1f4b762b1380946e73aeca574c77f14c')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getShare shid=$SHARE_ID"
          }
        ]
      },
      "patch": {
        "operationId": "update_share",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_share",
          "id": "?BINDING(shid)",
          "aspect": "instance"
        },
        "summary": "Rename share",
        "tags": [
          "Share"
        ],
        "x-bash-codegen-description": "Changes name of the share.\n",
        "description": "Changes name of the share.\n\n***Example cURL requests***\n\n**Changes name of the share**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PATCH \\\n-H \"Content-type: application/json\" \\\n-d '{ \"name\": \"NewShareName\" }' \\\n\"https://$HOST/api/v3/oneprovider/shares/$SHARE_ID\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Share's name has been changed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Share not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "shid",
            "in": "path",
            "description": "Share Id (e.g. '1f4b762b1380946e73aeca574c77f14c')",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "in": "body",
            "description": "New name for the share.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli updateShare shid=$SHARE_ID name==NewShareName"
          }
        ]
      },
      "delete": {
        "operationId": "remove_share",
        "x-onedata-gri": {
          "type": "op_share",
          "id": "?BINDING(shid)",
          "aspect": "instance"
        },
        "summary": "Remove a specific share",
        "tags": [
          "Share"
        ],
        "x-bash-codegen-description": "Removes a specific share. This operation will not remove data from shared\nfile or directory but it will not be accessible through public url anymore.\n",
        "description": "Removes a specific share. This operation will not remove data from shared\nfile or directory but it will not be accessible through public url anymore.\n\n***Example cURL requests***\n\n**Removes share**\n```bash\ncurl -X DELETE -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/shares/$SHARE_ID\"\n```\n",
        "responses": {
          "204": {
            "description": "Share has been removed."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Share not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "shid",
            "in": "path",
            "description": "Share Id (e.g. '1f4b762b1380946e73aeca574c77f14c')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli removeShare shid=$SHARE_ID"
          }
        ]
      }
    },
    "/spaces": {
      "get": {
        "operationId": "get_all_spaces",
        "x-onedata-gri": {
          "type": "op_space",
          "aspect": "list"
        },
        "tags": [
          "Space"
        ],
        "summary": "Get all spaces",
        "x-bash-codegen-description": "Returns the list of all user spaces.\n",
        "description": "Returns the list of all user spaces.\n\n***Example cURL requests***\n\n**List all user spaces**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/spaces\"\n\n[\n  {\n    \"spaceId\": \"51306215-674a-47b7-afd1-54fa45bcaff7\",\n    \"name\": \"Space1\"\n  },\n  {\n    \"spaceId\": \"0a568302-0f5e-454d-a6bc-7da7e1bfb985\",\n    \"name\": \"Space2\"\n  }\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of all user spaces - containining their names and Id's.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Space name."
                  },
                  "spaceId": {
                    "type": "string",
                    "description": "Space Id."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getAllSpaces"
          }
        ]
      }
    },
    "/spaces/{sid}": {
      "get": {
        "operationId": "get_space",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "instance"
        },
        "tags": [
          "Space"
        ],
        "summary": "Get basic space information",
        "x-bash-codegen-description": "Returns the basic information about space with given Id.\n",
        "description": "Returns the basic information about space with given Id.\n\n***Example cURL requests***\n\n**Get information about a specific space**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID\"\n\n{\n    \"name\": \"My Space 1\",\n    \"providers\": [\n        {\n            \"providerId\": \"51306215-674a-47b7-afd1-54fa45bcaff7\",\n            \"providerName\": \"MyPrivateCloud\"\n        },\n        {\n            \"providerId\": \"0a568302-0f5e-454d-a6bc-7da7e1bfb985\",\n            \"providerName\": \"PublicCloud1\"\n        }\n    ],\n    \"spaceId\": \"8f4b1e94-fdf8-4754-9962-edb01b2ee0f7\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The space information.",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getSpace sid=$SPACE_ID"
          }
        ]
      }
    },
    "/spaces/{sid}/indexes": {
      "get": {
        "deprecated": true,
        "operationId": "get_space_indexes",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "views"
        },
        "tags": [
          "Space"
        ],
        "summary": "Get all space indexes (deprecated)",
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_space_views).\n\nReturns the list of all index names in a space.\nThe list is broken down into pages, each with length less or equal to the\nlimit parameter. If the nextPageToken is present in the response, there are\nmore names to list - provide the token in the page_token parameter in\nthe following request.\n\nThis operation requires `space_view_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_space_views).\n\nReturns the list of all index names in a space.\nThe list is broken down into pages, each with length less or equal to the\nlimit parameter. If the nextPageToken is present in the response, there are\nmore names to list - provide the token in the page_token parameter in\nthe following request.\n\nThis operation requires `space_view_views` privilege.\n\n***Example cURL requests***\n\n**List at most 3 index names starting from page id 757136151113c2f**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes?limit=3&page_token=757136151113c2f\"\n\n{\n  \"views\": [\n    \"favourites\",\n    \"images\",\n    \"videos\"\n  ],\n  \"indexes\": [\n    \"favourites\",\n    \"images\",\n    \"videos\"\n  ],\n  \"nextPageToken\": \"8471726779817b3a\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of index names, nextPageToken is present when there is more to list.",
            "schema": {
              "$ref": "#/definitions/Views"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which to list indexes.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Allows to limit the number of returned indexes.\n",
            "type": "integer",
            "required": false,
            "default": 1000
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Allows to start the listing from a certain point, identified by the page token.\n",
            "type": "string",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli sid=$SPACE_ID getSpaceIndexes limit=20 page_token=757136151113c2f"
          }
        ]
      }
    },
    "/spaces/{sid}/indexes/{index_name}": {
      "get": {
        "deprecated": true,
        "operationId": "get_space_index",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(index_name)}"
        },
        "summary": "Get index (deprecated)",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/get_space_view).\n\nThis method returns a JSON describing specific index.\n\nThis operation requires `space_view_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/get_space_view).\n\nThis method returns a JSON describing specific index.\n\nThis operation requires `space_view_views` privilege.\n\n***Example cURL requests***\n\n**Get information about specific index**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME\n\n{\n    \"spatial\": false,\n    \"mapFunction\": \"function (id, type, meta, ctx) {\\\\n        if(type == \\\\'custom_metadata\\\\' && meta[\\\\'onexattr\\\\']) {\\\\n            return [meta[\\\\'onexattr\\\\'], id];\\\\n        }\\\\n        return null;\\\\n    }\"\n    \"reduceFunction\": null,\n    \"indexOptions\": {\n        \"update_min_changes\": 100\n    },\n    \"viewOptions\": {\n        \"update_min_changes\": 100\n    },\n    \"providers\": [\n        \"ASIOdhxckvufysd78f9w394356yisudfsduuzxch\"\n    ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about index.",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which index exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getSpaceIndex sid=$SPACE_ID index_name=$INDEX_NAME"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "create_space_index",
        "x-onedata-parse_body": "{as_is, <<\"mapFunction\">>}",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(index_name)}"
        },
        "summary": "Create index (deprecated)",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/create_space_view).\n\nThis method creates or replaces an existing index with a new one.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/create_space_view).\n\nThis method creates or replaces an existing index with a new one.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Create space index**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/javascript\" \\\n-d \"@./my_improved_index1.js\" \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME?spatial=false&providers[]=$PROVIDER_ID_1&providers[]=$PROVIDER_ID_2\n```\n",
        "consumes": [
          "application/javascript"
        ],
        "responses": {
          "204": {
            "description": "Index created successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which index will be created.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          },
          {
            "name": "mapFunction",
            "in": "body",
            "description": "The index map function.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Specifies whether index is spatial or not.",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "name": "update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-indexing.",
            "type": "integer",
            "required": false
          },
          {
            "name": "replica_update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-indexing of a replica index.",
            "type": "integer",
            "required": false
          },
          {
            "name": "providers[]",
            "in": "query",
            "description": "Providers which will create index.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat index.js | oneprovider-rest-cli createSpaceIndex sid=$SPACE_ID index_name=$INDEX_NAME 'providers[]=$PROVIDER_ID_1' 'providers[]=$PROVIDER_ID_2' -"
          }
        ]
      },
      "patch": {
        "deprecated": true,
        "operationId": "update_space_index",
        "x-onedata-parse_body": "{as_is, <<\"mapFunction\">>}",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(index_name)}"
        },
        "summary": "Update index (deprecated)",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/update_space_view).\n\nThis method updates existing index definition.\n\nIt takes the same arguments as PUT. Only specified parameters will be overwritten.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/update_space_view).\n\nThis method updates existing index definition.\n\nIt takes the same arguments as PUT. Only specified parameters will be overwritten.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Update space index**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PATCH \\\n-H \"Content-type: application/javascript\" \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME?update_min_changes=10\n```\n",
        "consumes": [
          "application/javascript"
        ],
        "responses": {
          "204": {
            "description": "Index updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which index exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          },
          {
            "name": "mapFunction",
            "in": "body",
            "description": "The index map function.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Specifies whether index is spatial or not.",
            "type": "boolean",
            "required": false
          },
          {
            "name": "update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-indexing.",
            "type": "integer",
            "required": false
          },
          {
            "name": "replica_update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-indexing of a replica index.",
            "type": "integer",
            "required": false
          },
          {
            "name": "providers[]",
            "in": "query",
            "description": "Providers which will create index.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat index.js | oneprovider-rest-cli updateSpaceIndex sid=$SPACE_ID index_name=$INDEX_NAME 'providers[]=$PROVIDER_ID' -"
          }
        ]
      },
      "delete": {
        "deprecated": true,
        "operationId": "remove_space_index",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(index_name)}"
        },
        "summary": "Remove index (deprecated)",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/remove_space_view).\n\nThis method removes an existing index.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/remove_space_view).\n\nThis method removes an existing index.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Remove existing index**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X DELETE \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME\n```\n",
        "responses": {
          "204": {
            "description": "Index removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which index exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli removeSpaceIndex sid=$SPACE_ID index_name=$INDEX_NAME"
          }
        ]
      }
    },
    "/spaces/{sid}/indexes/{index_name}/reduce": {
      "put": {
        "deprecated": true,
        "operationId": "update_index_reduce_function",
        "x-onedata-parse_body": "{as_is, <<\"reduceFunction\">>}",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view_reduce_function, ?BINDING(index_name)}"
        },
        "summary": "Update index reduce function (deprecated)",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/update_view_reduce_function).\n\nThis method replaces the existing index reduce function code with the request body.\n\nThe reduce functions are defined as JavaScript functions which are executed\non the database backend.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/update_view_reduce_function).\n\nThis method replaces the existing index reduce function code with the request body.\n\nThe reduce functions are defined as JavaScript functions which are executed\non the database backend.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Update space index**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/javascript\" \\\n-d \"@./my_improved_reduce_fun.js\" \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME/reduce\n```\n",
        "consumes": [
          "application/javascript"
        ],
        "responses": {
          "204": {
            "description": "Index reduce function updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which index exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          },
          {
            "name": "reduceFunction",
            "in": "body",
            "description": "The index reduce function.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat index.js | oneprovider-rest-cli updateIndexReduceFunction sid=$SPACE_ID index_name=$INDEX_NAME -"
          }
        ]
      },
      "delete": {
        "deprecated": true,
        "operationId": "remove_index_reduce_function",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view_reduce_function, ?BINDING(index_name)}"
        },
        "summary": "Remove index reduce function (deprecated)",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/remove_view_reduce_function).\n\nThis method removes the index reduce function.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/remove_view_reduce_function).\n\nThis method removes the index reduce function.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Remove index reduce function**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X DELETE \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME/reduce\n```\n",
        "responses": {
          "204": {
            "description": "Index reduce function removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which index exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli removeIndexReduceFunction sid=$SPACE_ID index_name=$INDEX_NAME"
          }
        ]
      }
    },
    "/spaces/{sid}/indexes/{index_name}/query": {
      "get": {
        "deprecated": true,
        "operationId": "query_space_index",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{query_view, ?BINDING(index_name)}"
        },
        "summary": "Query index (deprecated)",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/query_space_view).\n\nThis method returns the list of result objects for files which match the query\non a predefined index. \nThose objects contains following fields:\n- id - for use as `startkey_docid` or `endkey_docid` in following queries\n- key - the first element of list returned by user defined mapping/spatial function\n- value - the second element of list returned by user defined mapping/spatial function\n- geometry - describes geometry of data (only available in case of spatial indexes)\n\nCurrently, indexes are defined per space, i.e. the result will be limited\nto files and directories in a space for which the index was defined.\n\nThis operation supports custom index query attributes as provided by\nCouchbase:\n  [http://docs.couchbase.com/admin/admin/Views/views-querying.html].\n\nAdditionally, Couchbase spatial queries:\n  [http://docs.couchbase.com/admin/admin/Views/views-geospatial.html] are\npossible using the `bbox` query parameter.\nThese queries are possible on indexes which emit values conforming to the\n[http://geojson.org/] format.\n\nThis operation requires `space_query_views` privilege.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/query_space_view).\n\nThis method returns the list of result objects for files which match the query on a predefined index.\nThose objects contains following fields:\n* ``id`` - for use as `startkey_docid` or `endkey_docid` in following queries\n* ``key`` - the first element of list returned by user defined mapping/spatial function\n* ``value`` - the second element of list returned by user defined mapping/spatial function\n* ``geometry`` - describes geometry of data (only available in case of spatial indexes)\n\nCurrently, indexes are defined per space, i.e. the result will be limited to files and directories in a space for which the index was defined.\n\nThis operation supports also custom index query attributes as provided by [Couchbase](http://docs.couchbase.com/admin/admin/Views/views-querying.html).\n\nAdditionaly, Couchbase [spatial queries](http://docs.couchbase.com/admin/admin/Views/views-geospatial.html) are possible using `bbox` query parameter.\nThese queries are possible on indexes which emit values conforming to the [GeoJSON](http://geojson.org/) format.\n\nThis operation requires `space_query_views` privilege.\n\n***Example cURL requests***\n\n**Get 4 files from index skipping first 10**\n\nWith example map function used:\n```javascript\nfunction (id, type, meta, ctx) {\n  if(type == 'custom_metadata' && meta['onexattr']) {\n    return [meta['onexattr'], id];\n  }\n  return null;\n}\n```\n\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME/query?skip=10&limit=4\n\n[\n  {\n    \"id\": \"fd18b793d446099ae84f8bd5c054ad34\",\n    \"key\": 1,\n    \"value\": \"00000000002C45416775696423633062636533343133336336636633393238336134323333396430656461393323737061636531\"\n  },\n  {\n    \"id\": \"2785dbd91120e341265f9ee2370ccf08\",\n    \"key\": 2,\n    \"value\": \"00000000002CF7DB6775696423396261373964653764643866336432393436323262313133393738643338383323737061636531\"\n  },\n  {\n    \"id\": \"60a9e6da61e12deeb3e6c688fe861c01\",\n    \"key\": 3,\n    \"value\": \"00000000002C47916775696423336330336538623730333439353233383631313966346139343731316631656323737061636531\"\n  },\n  {\n    \"id\": \"651d696a8446e92ab55de163f9b8594d\",\n    \"key\": 4,\n    \"value\": \"00000000002CA8906775696423633835366438613139666565336337666165623538303736356465383039356223737061636531\"\n  },\n  ...\n]\n```\n\n**Get list of files associated with geospatial coordinates**\n\nWith example spatial function used:\n```javascript\nfunction (id, type, meta, ctx) {\n  if(type == 'custom_metadata' && meta['onexattr']) {\n    return [meta['onexattr'], id];\n  }\n  return null;\n}\n```\n\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/$INDEX_NAME/query?spatial=true&stale=false\n\n[\n  {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [0, 0]\n    },\n    \"id\": \"36cfb018c312653e65b346c421d7a678\",\n    \"key\": [[0, 0], [0, 0]],\n    \"value\": \"00000000002C5DA36775696423663535633934306564393632656530666133663330633137393362333765356223737061636531\"\n  },\n  {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [5.1, 10.22]\n    },\n    \"id\": \"972eb78ff8e262c4bebdc11799c20f51\",\n    \"key\": [[5.1, 5.1], [10.22, 10.22]],\n    \"value\": \"00000000002C678A6775696423363030666461383130623030386333616664363637396666653334366137656623737061636531\"\n  }\n]\n```\n\n**Get file popularity for a specific space**\n```bash\ncurl -sSk -X GET -H \"X-Auth-Token: $TOKEN\" \"https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/indexes/file-popularity/query?spatial=true&start_range=\\[1,0,0,0,0,0\\]&end_range=\\[null,null,null,null,null,null\\]\"\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Query results returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which index exist.",
            "type": "string",
            "required": true
          },
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          },
          {
            "name": "descending",
            "in": "query",
            "description": "Return the documents in descending order (by key).",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "key",
            "in": "query",
            "description": "Return only documents that match the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "keys",
            "in": "query",
            "description": "Return only documents that match any of the keys specified within the given array. Keys must be specified as a JSON array, escaped properly. Sorting is not applied when using this option.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of the returned documents to the specified number.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this number of records before starting to return the results.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "startkey",
            "in": "query",
            "description": "Return records with a value equal to or greater than the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "startkey_docid",
            "in": "query",
            "description": "Return records starting with the specified document Id.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey",
            "in": "query",
            "description": "Stop returning records when the specified key is reached. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey_docid",
            "in": "query",
            "description": "Stop returning records when the specified document Id is reached.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "inclusive_end",
            "in": "query",
            "description": "Specifies whether the specified end key is included in the result. ***Note:*** Do not use `inclusive_end` with `key` or `keys`.\n",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "stale",
            "in": "query",
            "description": "Allow records from a stale view to be used. Allowed values are `ok`, `update_after` or `false`.\n",
            "type": "string",
            "required": false,
            "default": "update_after",
            "enum": [
              "ok",
              "update_after",
              "false"
            ]
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Specify the bounding box for a spatial query (e.g. ?bbox=-180,-90,0,0)\n",
            "type": "string",
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Enable spatial type of query. When querying the file-popularity index, the `start_range` and\n`end_range` constraints should be specified as 6-dimensional arrays, with the following fields:\n`[SizeLowerLimit, LastOpenHoursEpochLowerLimit, TotalOpenLowerLimit, HoursOpenAvgLowerLimit, DayOpenAvgLowerLimit, MonthOpenAvgLowerLimit]`.\n",
            "type": "boolean",
            "required": false
          },
          {
            "name": "start_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `start_range=[1,0,0,0,0,0]`)."
          },
          {
            "name": "end_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `end_range=[null,null,null,null,null,null]`)."
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli querySpaceIndex sid=$SPACE_ID index_name=$INDEX_NAME key=value1"
          }
        ]
      }
    },
    "/spaces/{sid}/views": {
      "get": {
        "operationId": "get_space_views",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "views"
        },
        "tags": [
          "Space"
        ],
        "summary": "Get all space views",
        "x-bash-codegen-description": "Returns the list of all view names in a space.\nThe list is broken down into pages, each with length less or equal to the\nlimit parameter. If the nextPageToken is present in the response, there are\nmore names to list - provide the token in the page_token parameter in\nthe following request.\n\nThis operation requires `space_view_views` privilege.\n",
        "description": "Returns the list of all view names in a space.\nThe list is broken down into pages, each with length less or equal to the\nlimit parameter. If the nextPageToken is present in the response, there are\nmore names to list - provide the token in the page_token parameter in\nthe following request.\n\nThis operation requires `space_view_views` privilege.\n\n***Example cURL requests***\n\n**List at most 3 view names starting from page id 757136151113c2f**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views?limit=3&page_token=757136151113c2f\"\n\n{\n  \"views\": [\n    \"favourites\",\n    \"images\",\n    \"videos\"\n  ],\n  \"indexes\": [\n    \"favourites\",\n    \"images\",\n    \"videos\"\n  ],\n  \"nextPageToken\": \"8471726779817b3a\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of view names, nextPageToken is present when there is more to list.",
            "schema": {
              "$ref": "#/definitions/Views"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which to list views.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Allows to limit the number of returned views.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Allows to start the listing from a certain point, identified by the page token.\n",
            "type": "string",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli sid=$SPACE_ID getSpaceViews limit=20 page_token=757136151113c2f"
          }
        ]
      }
    },
    "/spaces/{sid}/views/{view_name}": {
      "get": {
        "operationId": "get_space_view",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(view_name)}"
        },
        "summary": "Get view",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This method returns a JSON describing specific view.\n\nThis operation requires `space_view_views` privilege.\n",
        "description": "This method returns a JSON describing specific view.\n\nThis operation requires `space_view_views` privilege.\n\n***Example cURL requests***\n\n**Get information about specific view**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME\n\n{\n    \"spatial\": false,\n    \"mapFunction\": \"function (id, type, meta, ctx) {\\\\n        if(type == \\\\'custom_metadata\\\\' && meta[\\\\'onexattr\\\\']) {\\\\n            return [meta[\\\\'onexattr\\\\'], id];\\\\n        }\\\\n        return null;\\\\n    }\"\n    \"reduceFunction\": null,\n    \"indexOptions\": {\n        \"update_min_changes\": 100\n    },\n    \"viewOptions\": {\n        \"update_min_changes\": 100\n    },\n    \"providers\": [\n        \"ASIOdhxckvufysd78f9w394356yisudfsduuzxch\"\n    ]\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about view.",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which view exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getSpaceView sid=$SPACE_ID view_name=$VIEW_NAME"
          }
        ]
      },
      "put": {
        "operationId": "create_space_view",
        "x-onedata-parse_body": "{as_is, <<\"mapFunction\">>}",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(view_name)}"
        },
        "summary": "Create view",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This method creates or replaces an existing view with a new one.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This method creates or replaces an existing view with a new one.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Create space view**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/javascript\" \\\n-d \"@./my_improved_view1.js\" \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME?spatial=false&providers[]=$PROVIDER_ID_1&providers[]=$PROVIDER_ID_2\n```\n",
        "consumes": [
          "application/javascript"
        ],
        "responses": {
          "204": {
            "description": "View created successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which view will be created.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          },
          {
            "name": "mapFunction",
            "in": "body",
            "description": "The view map function.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Specifies whether view is spatial or not.",
            "type": "boolean",
            "default": false,
            "required": false
          },
          {
            "name": "update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-viewing.",
            "type": "integer",
            "required": false
          },
          {
            "name": "replica_update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-viewing of a replica view.",
            "type": "integer",
            "required": false
          },
          {
            "name": "providers[]",
            "in": "query",
            "description": "Providers which will create view.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat view.js | oneprovider-rest-cli createSpaceView sid=$SPACE_ID view_name=$VIEW_NAME 'providers[]=$PROVIDER_ID_1' 'providers[]=$PROVIDER_ID_2' -"
          }
        ]
      },
      "patch": {
        "operationId": "update_space_view",
        "x-onedata-parse_body": "{as_is, <<\"mapFunction\">>}",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(view_name)}"
        },
        "summary": "Update view",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This method updates existing view definition.\n\nIt takes the same arguments as PUT. Only specified parameters will be overwritten.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This method updates existing view definition.\n\nIt takes the same arguments as PUT. Only specified parameters will be overwritten.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Update space view**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PATCH \\\n-H \"Content-type: application/javascript\" \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME?update_min_changes=10\n```\n",
        "consumes": [
          "application/javascript"
        ],
        "responses": {
          "204": {
            "description": "View updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which view exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          },
          {
            "name": "mapFunction",
            "in": "body",
            "description": "The view map function.",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Specifies whether view is spatial or not.",
            "type": "boolean",
            "required": false
          },
          {
            "name": "update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-viewing.",
            "type": "integer",
            "required": false
          },
          {
            "name": "replica_update_min_changes",
            "in": "query",
            "description": "Minimum number of document changes to trigger re-viewing of a replica view.",
            "type": "integer",
            "required": false
          },
          {
            "name": "providers[]",
            "in": "query",
            "description": "Providers which will create view.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat view.js | oneprovider-rest-cli updateSpaceView sid=$SPACE_ID view_name=$VIEW_NAME 'providers[]=$PROVIDER_ID' -"
          }
        ]
      },
      "delete": {
        "operationId": "remove_space_view",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view, ?BINDING(view_name)}"
        },
        "summary": "Remove view",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This method removes an existing view.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This method removes an existing view.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Remove existing view**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X DELETE \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME\n```\n",
        "responses": {
          "204": {
            "description": "View removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which view exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli removeSpaceView sid=$SPACE_ID view_name=$VIEW_NAME"
          }
        ]
      }
    },
    "/spaces/{sid}/views/{view_name}/reduce": {
      "put": {
        "operationId": "update_view_reduce_function",
        "x-onedata-parse_body": "{as_is, <<\"reduceFunction\">>}",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view_reduce_function, ?BINDING(view_name)}"
        },
        "summary": "Update view reduce function",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This method replaces the existing view reduce function code with the request body.\n\nThe reduce functions are defined as JavaScript functions which are executed\non the database backend.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This method replaces the existing view reduce function code with the request body.\n\nThe reduce functions are defined as JavaScript functions which are executed\non the database backend.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Update space view**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X PUT \\\n-H \"Content-type: application/javascript\" \\\n-d \"@./my_improved_reduce_fun.js\" \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME/reduce\n```\n",
        "consumes": [
          "application/javascript"
        ],
        "responses": {
          "204": {
            "description": "View reduce function updated successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which view exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          },
          {
            "name": "reduceFunction",
            "in": "body",
            "description": "The view reduce function.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat view.js | oneprovider-rest-cli updateViewReduceFunction sid=$SPACE_ID view_name=$VIEW_NAME -"
          }
        ]
      },
      "delete": {
        "operationId": "remove_view_reduce_function",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{view_reduce_function, ?BINDING(view_name)}"
        },
        "summary": "Remove view reduce function",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This method removes the view reduce function.\n\nThis operation requires `space_manage_views` privilege.\n",
        "description": "This method removes the view reduce function.\n\nThis operation requires `space_manage_views` privilege.\n\n***Example cURL requests***\n\n**Remove view reduce function**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X DELETE \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME/reduce\n```\n",
        "responses": {
          "204": {
            "description": "View reduce function removed successfully."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which view exist.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli removeViewReduceFunction sid=$SPACE_ID view_name=$VIEW_NAME"
          }
        ]
      }
    },
    "/spaces/{sid}/views/{view_name}/query": {
      "get": {
        "operationId": "query_space_view",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "{query_view, ?BINDING(view_name)}"
        },
        "summary": "Query view",
        "tags": [
          "Space"
        ],
        "x-bash-codegen-description": "This method returns the list of result objects for files which match the query \non a predefined view.\nThose objects contains following fields:\n- id - for use as `startkey_docid` or `endkey_docid` in following queries\n- key - the first element of list returned by user defined mapping/spatial function\n- value - the second element of list returned by user defined mapping/spatial function\n- geometry - describes geometry of data (only available in case of spatial views)\n\nCurrently, views are defined per space, i.e. the result will be limited\nto files and directories in a space for which the view was defined.\n\nThis operation supports custom view query attributes as provided by\nCouchbase:\n  [http://docs.couchbase.com/admin/admin/Views/views-querying.html].\n\nAdditionally, Couchbase spatial queries:\n  [http://docs.couchbase.com/admin/admin/Views/views-geospatial.html] are\npossible using the `bbox` query parameter.\nThese queries are possible on views which emit values conforming to the\n[http://geojson.org/] format.\n\nThis operation requires `space_query_views` privilege.\n",
        "description": "This method returns the list of result objects for files which match the query on a predefined view.\nThose objects contains following fields:\n* ``id`` - for use as `startkey_docid` or `endkey_docid` in following queries\n* ``key`` - the first element of list returned by user defined mapping/spatial function\n* ``value`` - the second element of list returned by user defined mapping/spatial function\n* ``geometry`` - describes geometry of data (only available in case of spatial views)\n\nCurrently, views are defined per space, i.e. the result will be limited to files and directories in a space for which the view was defined.\n\nThis operation supports also custom view query attributes as provided by [Couchbase](http://docs.couchbase.com/admin/admin/Views/views-querying.html).\n\nAdditionaly, Couchbase [spatial queries](http://docs.couchbase.com/admin/admin/Views/views-geospatial.html) are possible using `bbox` query parameter.\nThese queries are possible on views which emit values conforming to the [GeoJSON](http://geojson.org/) format.\n\nThis operation requires `space_query_views` privilege.\n\n***Example cURL requests***\n\n**Get 4 files from view skipping first 10**\n\nWith example map function used:\n```javascript\nfunction (id, type, meta, ctx) {\n  if(type == 'custom_metadata' && meta['onexattr']) {\n    return [meta['onexattr'], id];\n  }\n  return null;\n}\n```\n\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/VIEW_NAME/query?skip=10&limit=4\n\n[\n  {\n    \"id\": \"fd18b793d446099ae84f8bd5c054ad34\",\n    \"key\": 1,\n    \"value\": \"00000000002C45416775696423633062636533343133336336636633393238336134323333396430656461393323737061636531\"\n  },\n  {\n    \"id\": \"2785dbd91120e341265f9ee2370ccf08\",\n    \"key\": 2,\n    \"value\": \"00000000002CF7DB6775696423396261373964653764643866336432393436323262313133393738643338383323737061636531\"\n  },\n  {\n    \"id\": \"60a9e6da61e12deeb3e6c688fe861c01\",\n    \"key\": 3,\n    \"value\": \"00000000002C47916775696423336330336538623730333439353233383631313966346139343731316631656323737061636531\"\n  },\n  {\n    \"id\": \"651d696a8446e92ab55de163f9b8594d\",\n    \"key\": 4,\n    \"value\": \"00000000002CA8906775696423633835366438613139666565336337666165623538303736356465383039356223737061636531\"\n  },\n  ...\n]\n```\n\n**Get list of files associated with geospatial coordinates**\n\nWith example spatial function used:\n```javascript\nfunction (id, type, meta, ctx) {\n  if(type == 'custom_metadata' && meta['onexattr']) {\n    return [meta['onexattr'], id];\n  }\n  return null;\n}\n```\n\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X GET \\\nhttps://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/$VIEW_NAME/query?spatial=true&stale=false\n\n[\n  {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [0, 0]\n    },\n    \"id\": \"36cfb018c312653e65b346c421d7a678\",\n    \"key\": [[0, 0], [0, 0]],\n    \"value\": \"00000000002C5DA36775696423663535633934306564393632656530666133663330633137393362333765356223737061636531\"\n  },\n  {\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [5.1, 10.22]\n    },\n    \"id\": \"972eb78ff8e262c4bebdc11799c20f51\",\n    \"key\": [[5.1, 5.1], [10.22, 10.22]],\n    \"value\": \"00000000002C678A6775696423363030666461383130623030386333616664363637396666653334366137656623737061636531\"\n  }\n]\n```\n\n**Get file popularity for a specific space**\n```bash\ncurl -sSk -X GET -H \"X-Auth-Token: $TOKEN\" \"https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/views/file-popularity/query?spatial=true&start_range=\\[1,0,0,0,0,0\\]&end_range=\\[null,null,null,null,null,null\\]\"\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Query results returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which view exist.",
            "type": "string",
            "required": true
          },
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          },
          {
            "name": "descending",
            "in": "query",
            "description": "Return the documents in descending order (by key).",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "key",
            "in": "query",
            "description": "Return only documents that match the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "keys",
            "in": "query",
            "description": "Return only documents that match any of the keys specified within the given array. Keys must be specified as a JSON array, escaped properly. Sorting is not applied when using this option.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of the returned documents to the specified number.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this number of records before starting to return the results.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "startkey",
            "in": "query",
            "description": "Return records with a value equal to or greater than the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "startkey_docid",
            "in": "query",
            "description": "Return records starting with the specified document Id.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey",
            "in": "query",
            "description": "Stop returning records when the specified key is reached. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey_docid",
            "in": "query",
            "description": "Stop returning records when the specified document Id is reached.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "inclusive_end",
            "in": "query",
            "description": "Specifies whether the specified end key is included in the result. ***Note:*** Do not use `inclusive_end` with `key` or `keys`.\n",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "stale",
            "in": "query",
            "description": "Allow records from a stale view to be used. Allowed values are `ok`, `update_after` or `false`.\n",
            "type": "string",
            "required": false,
            "default": "update_after",
            "enum": [
              "ok",
              "update_after",
              "false"
            ]
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Specify the bounding box for a spatial query (e.g. ?bbox=-180,-90,0,0)\n",
            "type": "string",
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Enable spatial type of query. When querying the file-popularity view, the `start_range` and\n`end_range` constraints should be specified as 6-dimensional arrays, with the following fields:\n`[SizeLowerLimit, LastOpenHoursEpochLowerLimit, TotalOpenLowerLimit, HoursOpenAvgLowerLimit, DayOpenAvgLowerLimit, MonthOpenAvgLowerLimit]`.\n",
            "type": "boolean",
            "required": false
          },
          {
            "name": "start_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `start_range=[1,0,0,0,0,0]`)."
          },
          {
            "name": "end_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `end_range=[null,null,null,null,null,null]`)."
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli querySpaceView sid=$SPACE_ID view_name=$VIEW_NAME key=value1"
          }
        ]
      }
    },
    "/spaces/{sid}/transfers": {
      "get": {
        "operationId": "get_all_transfers",
        "x-onedata-gri": {
          "type": "op_space",
          "id": "?BINDING(sid)",
          "aspect": "transfers"
        },
        "tags": [
          "Space"
        ],
        "summary": "Get all transfers",
        "x-bash-codegen-description": "Returns the list of all transfer IDs in a space with given state.\nThe list is broken down into pages, each with length less or equal to the\nlimit parameter. If the nextPageToken is present in the response, there are\nmore transfers to list - provide the token in the page_token parameter in\nthe following request.\n\nThis operation requires `space_view_transfers` privilege.\n",
        "description": "Returns the list of all transfer IDs in a space with given state.\nThe list is broken down into pages, each with length less or equal to the\nlimit parameter. If the nextPageToken is present in the response, there are\nmore transfers to list - provide the token in the page_token parameter in\nthe following request.\n\nThis operation requires `space_view_transfers` privilege.\n\n***Example cURL requests***\n\n**List at most 3 ongoing transfers starting from page id 757136151113c2f**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/spaces/$SPACE_ID/transfers?state=ongoing&limit=3&page_token=757136151113c2f\"\n\n{\n  \"transfers\": [\n    \"3b6a31fb-ca87-4ea6-8526-fbf5a0773d69\",\n    \"29fa94de-33ad-4347-9cbe-3d8faa9422dd\",\n    \"da426f74-5770-42a1-b799-354a3c4c154b\"\n  ],\n  \"nextPageToken\": \"8471726779817b3a\"\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of transfer IDs, nextPageToken is present when there is more to list.",
            "schema": {
              "type": "object",
              "properties": {
                "transfers": {
                  "type": "array",
                  "description": "The list of transfer Ids.",
                  "items": {
                    "type": "string"
                  }
                },
                "nextPageToken": {
                  "type": "string",
                  "description": "Token which can be used to list next batch of transfer Ids."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id in which to list transfers.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "state",
            "in": "query",
            "description": "Specifies the state of transfers to list. The default is \"ongoing\".\n",
            "type": "string",
            "enum": [
              "waiting",
              "ongoing",
              "ended"
            ],
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Allows to limit the number of returned transfers.\n",
            "type": "integer",
            "required": false,
            "default": 1000
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Allows to start the listing from a certain point, identified by the page token.\n",
            "type": "string",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli sid=$SPACE_ID getAllTransfers state=ongoing limit=20 page_token=757136151113c2f"
          }
        ]
      }
    },
    "/replicas/{path}": {
      "get": {
        "operationId": "get_file_replicas",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?PATH_BINDING",
          "aspect": "distribution"
        },
        "tags": [
          "Replica"
        ],
        "summary": "Get replicas by path",
        "x-bash-codegen-description": "Returns file distribution information about a specific file.\n",
        "description": "Returns file distribution information about a specific file.\n\n***Example cURL requests***\n\n**Get file distribution map by path**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/replicas/MySpace1/MyFile1.txt\"\n\n[\n  {\n    \"blocks\": [ [ 0, 4 ], [ 10, 20 ] ],\n    \"providerId\": \"784dae9d-34a3-4aef-ab4b-2c6c60b74e27\"\n  },\n  {\n    \"blocks\": [ [ 5, 9 ] ],\n    \"providerId\": \"b296ab05-3d62-4755-be46-c57ced411ff1\"\n  }\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of file blocks stored at each provider.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileDistribution"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File path (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileReplicas path='/MySpace/testfiles/file1.txt' key=value1"
          }
        ]
      },
      "post": {
        "operationId": "replicate_file",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?PATH_BINDING",
          "aspect": "instance"
        },
        "tags": [
          "Replica"
        ],
        "summary": "Replicate file or directory by path",
        "x-bash-codegen-description": "Replicates a file specified by absolute path in `path` parameter to a specified provider.\nThis operation is asynchronous and it can take a long time depending on the size of the data to move.\n\nIf the `path` parameter specifies a directory, entire directory is replicated to\nrequested provider.\n\nThis operation requires `space_schedule_replication` privilege.\n",
        "description": "Replicates a file specified by absolute path in `path` parameter to a specified provider.\nThis operation is asynchronous and it can take a long time depending on the size of the data to move.\n\nIf the `path` parameter specifies a directory, entire directory is replicated to requested provider.\n\nThis operation requires `space_schedule_replication` privilege.\n\n***Example cURL requests***\n\n**Replicate file by path to any provider**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/replicas/MySpace1/MyFile1.txt\"\n\n\n{ \"transferId\": \"4f674576-4c63-443b-b3d5-2f74a40724a0\" }\n```\n\n**Replicate file by path to specific storage provider with URL callback**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"url\": \"http://example.com/transfer_complete\" }' \\\n\"https://$HOST/api/v3/oneprovider/replicas/MySpace1/MyFile1.txt?provider_id=$PROVIDER_ID\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replication request was accepted and the result is the transfer Id, which can be used for monitoring the transfer status. Also URI of the new transfer in form https://$HOST/api/v3/oneprovider/transfers/{tid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "URI of the new transfer.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File path (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider to which the file will be replicated. By default the file will be replicated to the provider handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "callback",
            "in": "body",
            "description": "This parameter allows the user to specify a REST callback URL which will be called when the transfer is complete\n",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Callback"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli replicateFile path='/MySpace/testfiles/file1.txt' provider_id=$PROVIDER_ID"
          }
        ]
      },
      "delete": {
        "operationId": "evict_replica",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?PATH_BINDING",
          "aspect": "instance"
        },
        "tags": [
          "Replica"
        ],
        "summary": "Evict existing replica by file path",
        "x-bash-codegen-description": "Removes a replica of a file specified by absolute path in `path` parameter\nfrom a specified provider.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the repliace has to be replicated before being\nevicted from this provider.\n\nIf the `path` parameter specifies a directory, entire directory is evicted from\nthis provider requested provider.\n\nThis operation requires `space_schedule_eviction` privilege when scheduling eviction\nand also `space_schedule_replication` when scheduling migration.\n",
        "description": "Removes a replica of a file specified by absolute path in `path` parameter\nfrom a specified provider.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the repliace has to be replicated before being\nevicted from this provider.\n\nIf the `path` parameter specifies a directory, entire directory is evicted from\nthis provider requested provider.\n\nThis operation requires `space_schedule_eviction` privilege when scheduling eviction\nand also `space_schedule_replication` when scheduling migration.\n\n***Example cURL requests***\n\n**Remove file replica by path from specific storage provider**\n```bash\ncurl -X DELETE -H \"X-Auth-Token: $TOKEN\" -H 'Content-type: application/json' \\\n\"https://$HOST/api/v3/oneprovider/replicas/MySpace1/MyFile1.txt?provider_id=$PROVIDER_ID\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replica removal has been accepted and the result is the transfer Id, which can be used for monitoring the transfer status. Also URI of the new transfer in form https://$HOST/api/v3/oneprovider/transfers/{tid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "URI of the new transfer.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "File path (e.g. '/MySpace/testfiles/file1.txt')",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider from which the replica will be evicted. By default the replica will be evicted in the provider handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "migration_provider_id",
            "in": "query",
            "description": "The Id of the provider to which the file should be replicated before being evicted.\n",
            "required": false,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli evictReplica path='/MySpace/testfiles/file1.txt' migration_provider_id=$MIGRATION_PROVIDER_ID"
          }
        ]
      }
    },
    "/replicas-id/{fid}": {
      "get": {
        "operationId": "get_file_replicas_by_id",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?OBJECTID_BINDING(fid)",
          "aspect": "distribution"
        },
        "tags": [
          "Replica"
        ],
        "summary": "Get replicas by Id",
        "x-bash-codegen-description": "Returns file distribution information about a specific file.\n",
        "description": "Returns file distribution information about a specific file.\n\n***Example cURL requests***\n\n**Get file distribution map by Id**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/replicas-id/$FILE_ID\"\n\n[\n  {\n    \"blocks\": [ [ 0, 4 ], [ 10, 20 ] ],\n    \"providerId\": \"57ecb305-a097-4243-bd03-a995e78ab206\"\n  },\n  {\n    \"blocks\": [ [ 5, 9 ] ],\n    \"providerId\": \"7dedd2c7-dc58-4e62-925e-94663faa70fc\"\n  }\n]\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of file blocks stored at each provider.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileDistribution"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fid",
            "in": "path",
            "description": "The Id of the file",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileReplicasById fid=$FILE_ID"
          }
        ]
      },
      "post": {
        "operationId": "replicate_file_by_id",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?OBJECTID_BINDING(fid)",
          "aspect": "instance"
        },
        "tags": [
          "Replica"
        ],
        "summary": "Replicate file or directory by Id",
        "x-bash-codegen-description": "Replicates a file specified by Id in `fid` parameter to a specified provider.\nThis operation is asynchronous and it can take a long time depending on\nthe size of the data to move.\n\nIf the `fid` parameter specifies a directory, entire directory is replicated to\nrequested provider.\n\nThis operation requires `space_schedule_replication` privilege.\n",
        "description": "Replicates a file specified by Id in `fid` parameter to a specified provider.\nThis operation is asynchronous and it can take a long time depending on the size of the data to move.\n\nIf the `fid` parameter specifies a directory, entire directory is replicated to requested provider.\n\nThis operation requires `space_schedule_replication` privilege.\n\n***Example cURL requests***\n\n**Replicate file by Id to any provider**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/replicas-id/$FILE_ID\"\n\n\n{ \"transferId\": \"4f674576-4c63-443b-b3d5-2f74a40724a0\" }\n```\n\n**Replicate file by Id to specific storage provider with URL callback**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"url\": \"http://example.com/transfer_complete\" }' \\\n\"https://$HOST/api/v3/oneprovider/replicas-id/$FILE_ID?provider_id=$PROVIDER_ID\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replication request was accepted and the result is the transfer Id, which can be used for monitoring the transfer status. Also URI of the new transfer in form https://$HOST/api/v3/oneprovider/transfers/{tid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "URI of the new transfer.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fid",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider to which the file will be replicated. By default the file will be replicated to the provided handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "callback",
            "in": "body",
            "description": "This parameter allows the user to specify a REST callback URL which will be called when the transfer is complete\n",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Callback"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli replicateFileById fid=$FILE_ID provider_id=$PROVIDER_ID"
          }
        ]
      },
      "delete": {
        "operationId": "evict_replica_by_id",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?OBJECTID_BINDING(fid)",
          "aspect": "instance"
        },
        "tags": [
          "Replica"
        ],
        "summary": "Evict existing replica by file Id",
        "x-bash-codegen-description": "Evicts a replica of a file specified by Id in `fid` parameter.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the replica has to be replicated before being\nevicted from this provider.\n\nIf the `fid` parameter specifies a directory, entire directory is evicted.\n\nThis operation requires `space_schedule_eviction` privilege when scheduling eviction\nand also `space_schedule_replication` when scheduling migration.\n",
        "description": "Evicts a replica of a file specified by file Id in `fid` parameter.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the repliace has to be replicated before being\nevicted from this provider.\n\nIf the `fid` parameter specifies a directory, entire directory is evicted.\n\nThis operation requires `space_schedule_eviction` privilege when scheduling eviction\nand also `space_schedule_replication` when scheduling migration.\n\n***Example cURL requests***\n\n**Evict file replica by Id from specific storage provider**\n```bash\ncurl -X DELETE -H \"X-Auth-Token: $TOKEN\" -H 'Content-type: application/json' \\\n\"https://$HOST/api/v3/oneprovider/replicas-id/$FILE_ID?provider_id=$PROVIDER_ID\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replica removal has been accepted and the result is the transfer Id, which can be used for monitoring the transfer status. Also URI of the new transfer in form https://$HOST/api/v3/oneprovider/transfers/{tid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "URI of the new transfer.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fid",
            "in": "path",
            "description": "Id of the file.",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider from which the replica will be evicted. By default the replica will be evicted in the provider handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "migration_provider_id",
            "in": "query",
            "description": "The Id of the provider to which the file should be replicated before being evicted.\n",
            "required": false,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli evictReplicaById fid=$FILE_ID migration_provider_id=$MIGRATION_PROVIDER_ID"
          }
        ]
      }
    },
    "/replicas-index/{index_name}": {
      "post": {
        "deprecated": true,
        "operationId": "replicate_files_by_index",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?BINDING(index_name)",
          "aspect": "replicate_by_view"
        },
        "summary": "Replicate files by index (deprecated)",
        "tags": [
          "Replica"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/replicate_files_by_view).\n\nQueries the specified index and replicates the resulting list of files to specified provider.\nThis operation is asynchronous and it can take a long time depending on the size of the data\nto move.\n\nThis operation supports custom index query attributes as provided by\nCouchbase:\n  [http://docs.couchbase.com/admin/admin/Views/views-querying.html].\n\nAdditionally, Couchbase spatial queries:\n  [http://docs.couchbase.com/admin/admin/Views/views-geospatial.html] are\npossible using the `bbox` query parameter.\nThese queries are possible on indexes which emit values conforming to the\n[http://geojson.org/] format.\n\nThis operation requires `space_schedule_replication` and `space_query_views` privileges.\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/replicate_files_by_view).\n\nQueries the specified index and replicates the resulting list of files to specified provider.\nThis operation is asynchronous and it can take a long time depending on the size of the data\nto move.\n\nThis operation supports custom index query attributes as provided by [Couchbase](http://docs.couchbase.com/admin/admin/Views/views-querying.html).\n\nAdditionally, Couchbase [spatial queries](http://docs.couchbase.com/admin/admin/Views/views-geospatial.html) are possible using the `bbox` query parameter.\nThese queries are possible on indexes which emit values conforming to the [GeoJSON](http://geojson.org/) format.\n\nThis operation requires `space_schedule_replication` and `space_query_views` privileges.\n\n***Example cURL requests***\n\n**Replicate files returned by index within specified space to any provider**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/replicas-index/$INDEX_NAME?space_id=$SPACE_ID\"\n\n\n{ \"transferId\": \"4f674576-4c63-443b-b3d5-2f74a40724a0\"}\n```\n\n**Replicate 100 files (skipping the first 200) returned by index within specified space to any provider with URL callback**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"url\": \"http://example.com/transfer_complete\" }' \\\n\"https://$HOST/api/v3/oneprovider/replicas-index/$INDEX_NAME?space_id=$SPACE_ID&provider_id=$PROVIDER_ID&skip=200&limit=100\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replication request was accepted and the result is the transfer Id, which can be used for monitoring the transfer status.\n",
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          },
          {
            "name": "space_id",
            "in": "query",
            "description": "Space Id in which index exist.",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider to which the files will be replicated. By default the files will be replicated to the provided handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "callback",
            "in": "body",
            "description": "This parameter allows the user to specify a REST callback URL which will be called when the transfer is complete\n",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Callback"
            }
          },
          {
            "name": "descending",
            "in": "query",
            "description": "Return the documents in descending order (by key).",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "key",
            "in": "query",
            "description": "Return only documents that match the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of the returned documents to the specified number.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this number of records before starting to return the results.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "startkey",
            "in": "query",
            "description": "Return records with a value equal to or greater than the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "startkey_docid",
            "in": "query",
            "description": "Return records starting with the specified document Id.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey",
            "in": "query",
            "description": "Stop returning records when the specified key is reached. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey_docid",
            "in": "query",
            "description": "Stop returning records when the specified document Id is reached.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "inclusive_end",
            "in": "query",
            "description": "Specifies whether the specified end key is included in the result. ***Note:*** Do not use `inclusive_end` with `key` or `keys`.\n",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "stale",
            "in": "query",
            "description": "Allow records from a stale view to be used. Allowed values are `ok`, `update_after` or `false`.\n",
            "type": "string",
            "required": false,
            "default": "update_after",
            "enum": [
              "ok",
              "update_after",
              "false"
            ]
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Specify the bounding box for a spatial query (e.g. ?bbox=-180,-90,0,0)\n",
            "type": "string",
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Enable spatial type of query. When querying the file-popularity index, the `start_range` and\n`end_range` constraints should be specified as 6-dimensional arrays, with the following fields:\n`[SizeLowerLimit, LastOpenHoursEpochLowerLimit, TotalOpenLowerLimit, HoursOpenAvgLowerLimit, DayOpenAvgLowerLimit, MonthOpenAvgLowerLimit]`.\n",
            "type": "boolean",
            "required": false
          },
          {
            "name": "start_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `start_range=[1,0,0,0,0,0]`)."
          },
          {
            "name": "end_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `end_range=[null,null,null,null,null,null]`)."
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli replicateFilesByIndex space_id=$SPACE_ID index_name=$INDEX_NAME key=value1"
          }
        ]
      },
      "delete": {
        "deprecated": true,
        "operationId": "evict_replicas_by_index",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?BINDING(index_name)",
          "aspect": "evict_by_view"
        },
        "summary": "Evict existing replicas by index (deprecated)",
        "tags": [
          "Replica"
        ],
        "x-bash-codegen-description": "This enpoint is deprecated, please use [this one](#operation/evict_replicas_by_view).\n\nQueries the specified index and evicts the resulting list of replicas in specified provider.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the repliace has to be replicated before being\nevicted from this provider.\n\nThis operation supports custom index query attributes as provided by\nCouchbase:\n  [http://docs.couchbase.com/admin/admin/Views/views-querying.html].\n\nAdditionally, Couchbase spatial queries:\n  [http://docs.couchbase.com/admin/admin/Views/views-geospatial.html] are\npossible using the `bbox` query parameter.\nThese queries are possible on indexes which emit values conforming to the\n[http://geojson.org/] format.\n\nThis operation requires:\n  * `space_query_views` and `space_schedule_eviction` when scheduling eviction\n  * `space_query_views`, `space_schedule_eviction` and `space_schedule_replication` when scheduling migration\n",
        "description": "This enpoint is deprecated, please use [this one](#operation/evict_replicas_by_view).\n\nQueries the specified index and evicts the resulting list of replicas in specified provider.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the repliace has to be replicated before being\nevicted from this provider.\n\nThis operation supports custom index query attributes as provided by [Couchbase](http://docs.couchbase.com/admin/admin/Views/views-querying.html).\n\nAdditionally, Couchbase [spatial queries](http://docs.couchbase.com/admin/admin/Views/views-geospatial.html) are possible using the `bbox` query parameter.\nThese queries are possible on indexes which emit values conforming to the [GeoJSON](http://geojson.org/) format.\n\nThis operation requires:\n  * `space_query_views` and `space_schedule_eviction` when scheduling eviction\n  * `space_query_views`, `space_schedule_eviction` and `space_schedule_replication` when scheduling migration\n\n***Example cURL requests***\n\n**Evicts 100 replicas (skipping the first 200) returned by index within specified space from specific provider**\n```bash\ncurl -X DELETE -H \"X-Auth-Token: $TOKEN\" -H 'Content-type: application/json' \\\n\"https://$HOST/api/v3/oneprovider/replicas-index/$INDEX_NAME?space_id=$SPACE_ID&provider_id=$PROVIDER_ID&skip=200&limit=100\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replication request was accepted and the result is the transfer Id, which can be used for monitoring the transfer status.\n",
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "index_name",
            "in": "path",
            "description": "Name of the index.",
            "type": "string",
            "required": true
          },
          {
            "name": "space_id",
            "in": "query",
            "description": "Space Id in which index exist.",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider from which the replica will be evicted. By default the replicas will be evicted in the provider handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "migration_provider_id",
            "in": "query",
            "description": "The Id of the provider to which the replicas should be synchronized before being evicted.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "descending",
            "in": "query",
            "description": "Return the documents in descending order (by key).",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "key",
            "in": "query",
            "description": "Return only documents that match the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of the returned documents to the specified number.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this number of records before starting to return the results.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "startkey",
            "in": "query",
            "description": "Return records with a value equal to or greater than the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "startkey_docid",
            "in": "query",
            "description": "Return records starting with the specified document Id.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey",
            "in": "query",
            "description": "Stop returning records when the specified key is reached. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey_docid",
            "in": "query",
            "description": "Stop returning records when the specified document Id is reached.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "inclusive_end",
            "in": "query",
            "description": "Specifies whether the specified end key is included in the result. ***Note:*** Do not use `inclusive_end` with `key` or `keys`.\n",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "stale",
            "in": "query",
            "description": "Allow records from a stale view to be used. Allowed values are `ok`, `update_after` or `false`.\n",
            "type": "string",
            "required": false,
            "default": "update_after",
            "enum": [
              "ok",
              "update_after",
              "false"
            ]
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Specify the bounding box for a spatial query (e.g. ?bbox=-180,-90,0,0)\n",
            "type": "string",
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Enable spatial type of query. When querying the file-popularity index, the `start_range` and\n`end_range` constraints should be specified as 6-dimensional arrays, with the following fields:\n`[SizeLowerLimit, LastOpenHoursEpochLowerLimit, TotalOpenLowerLimit, HoursOpenAvgLowerLimit, DayOpenAvgLowerLimit, MonthOpenAvgLowerLimit]`.\n",
            "type": "boolean",
            "required": false
          },
          {
            "name": "start_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `start_range=[1,0,0,0,0,0]`)."
          },
          {
            "name": "end_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `end_range=[null,null,null,null,null,null]`)."
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli evictReplicasByIndex space_id=$SPACE_ID index_name=$INDEX_NAME key=value1"
          }
        ]
      }
    },
    "/replicas-view/{view_name}": {
      "post": {
        "operationId": "replicate_files_by_view",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?BINDING(view_name)",
          "aspect": "replicate_by_view"
        },
        "summary": "Replicate files by view",
        "tags": [
          "Replica"
        ],
        "x-bash-codegen-description": "Queries the specified view and replicates the resulting list of files to specified provider.\nThis operation is asynchronous and it can take a long time depending on the size of the data\nto move.\n\nThis operation supports custom view query attributes as provided by\nCouchbase:\n  [http://docs.couchbase.com/admin/admin/Views/views-querying.html].\n\nAdditionally, Couchbase spatial queries:\n  [http://docs.couchbase.com/admin/admin/Views/views-geospatial.html] are\npossible using the `bbox` query parameter.\nThese queries are possible on views which emit values conforming to the\n[http://geojson.org/] format.\n\nThis operation requires `space_schedule_replication` and `space_query_views` privileges.\n",
        "description": "Queries the specified view and replicates the resulting list of files to specified provider.\nThis operation is asynchronous and it can take a long time depending on the size of the data\nto move.\n\nThis operation supports custom view query attributes as provided by [Couchbase](http://docs.couchbase.com/admin/admin/Views/views-querying.html).\n\nAdditionally, Couchbase [spatial queries](http://docs.couchbase.com/admin/admin/Views/views-geospatial.html) are possible using the `bbox` query parameter.\nThese queries are possible on views which emit values conforming to the [GeoJSON](http://geojson.org/) format.\n\nThis operation requires `space_schedule_replication` and `space_query_views` privileges.\n\n***Example cURL requests***\n\n**Replicate files returned by view within specified space to any provider**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/replicas-view/$VIEW_NAME?space_id=$SPACE_ID\"\n\n\n{ \"transferId\": \"4f674576-4c63-443b-b3d5-2f74a40724a0\"}\n```\n\n**Replicate 100 files (skipping the first 200) returned by view within specified space to any provider with URL callback**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n-H 'Content-type: application/json' -d '{ \"url\": \"http://example.com/transfer_complete\" }' \\\n\"https://$HOST/api/v3/oneprovider/replicas-view/$VIEW_NAME?space_id=$SPACE_ID&provider_id=$PROVIDER_ID&skip=200&limit=100\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replication request was accepted and the result is the transfer Id, which can be used for monitoring the transfer status.\n",
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          },
          {
            "name": "space_id",
            "in": "query",
            "description": "Space Id in which view exist.",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider to which the files will be replicated. By default the files will be replicated to the provided handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "callback",
            "in": "body",
            "description": "This parameter allows the user to specify a REST callback URL which will be called when the transfer is complete\n",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Callback"
            }
          },
          {
            "name": "descending",
            "in": "query",
            "description": "Return the documents in descending order (by key).",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "key",
            "in": "query",
            "description": "Return only documents that match the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of the returned documents to the specified number.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this number of records before starting to return the results.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "startkey",
            "in": "query",
            "description": "Return records with a value equal to or greater than the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "startkey_docid",
            "in": "query",
            "description": "Return records starting with the specified document Id.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey",
            "in": "query",
            "description": "Stop returning records when the specified key is reached. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey_docid",
            "in": "query",
            "description": "Stop returning records when the specified document Id is reached.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "inclusive_end",
            "in": "query",
            "description": "Specifies whether the specified end key is included in the result. ***Note:*** Do not use `inclusive_end` with `key` or `keys`.\n",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "stale",
            "in": "query",
            "description": "Allow records from a stale view to be used. Allowed values are `ok`, `update_after` or `false`.\n",
            "type": "string",
            "required": false,
            "default": "update_after",
            "enum": [
              "ok",
              "update_after",
              "false"
            ]
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Specify the bounding box for a spatial query (e.g. ?bbox=-180,-90,0,0)\n",
            "type": "string",
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Enable spatial type of query. When querying the file-popularity view, the `start_range` and\n`end_range` constraints should be specified as 6-dimensional arrays, with the following fields:\n`[SizeLowerLimit, LastOpenHoursEpochLowerLimit, TotalOpenLowerLimit, HoursOpenAvgLowerLimit, DayOpenAvgLowerLimit, MonthOpenAvgLowerLimit]`.\n",
            "type": "boolean",
            "required": false
          },
          {
            "name": "start_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `start_range=[1,0,0,0,0,0]`)."
          },
          {
            "name": "end_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `end_range=[null,null,null,null,null,null]`)."
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli replicateFilesByView space_id=$SPACE_ID view_name=$VIEW_NAME key=value1"
          }
        ]
      },
      "delete": {
        "operationId": "evict_replicas_by_view",
        "x-onedata-gri": {
          "type": "op_replica",
          "id": "?BINDING(view_name)",
          "aspect": "evict_by_view"
        },
        "summary": "Evict existing replicas by view",
        "tags": [
          "Replica"
        ],
        "x-bash-codegen-description": "Queries the specified view and evicts the resulting list of replicas in specified provider.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the repliace has to be replicated before being\nevicted from this provider.\n\nThis operation supports custom view query attributes as provided by\nCouchbase:\n  [http://docs.couchbase.com/admin/admin/Views/views-querying.html].\n\nAdditionally, Couchbase spatial queries:\n  [http://docs.couchbase.com/admin/admin/Views/views-geospatial.html] are\npossible using the `bbox` query parameter.\nThese queries are possible on views which emit values conforming to the\n[http://geojson.org/] format.\n\nThis operation requires:\n  * `space_query_views` and `space_schedule_eviction` when scheduling eviction\n  * `space_query_views`, `space_schedule_eviction` and `space_schedule_replication` when scheduling migration\n",
        "description": "Queries the specified view and evicts the resulting list of replicas in specified provider.\nThis operation is asynchronous. Optional argument `migration_provider_id`\ncan be used to specify where the repliace has to be replicated before being\nevicted from this provider.\n\nThis operation supports custom view query attributes as provided by [Couchbase](http://docs.couchbase.com/admin/admin/Views/views-querying.html).\n\nAdditionally, Couchbase [spatial queries](http://docs.couchbase.com/admin/admin/Views/views-geospatial.html) are possible using the `bbox` query parameter.\nThese queries are possible on views which emit values conforming to the [GeoJSON](http://geojson.org/) format.\n\nThis operation requires:\n  * `space_query_views` and `space_schedule_eviction` when scheduling eviction\n  * `space_query_views`, `space_schedule_eviction` and `space_schedule_replication` when scheduling migration\n\n***Example cURL requests***\n\n**Evicts 100 replicas (skipping the first 200) returned by view within specified space from specific provider**\n```bash\ncurl -X DELETE -H \"X-Auth-Token: $TOKEN\" -H 'Content-type: application/json' \\\n\"https://$HOST/api/v3/oneprovider/replicas-view/$VIEW_NAME?space_id=$SPACE_ID&provider_id=$PROVIDER_ID&skip=200&limit=100\"\n\n\n{ \"transferId\": \"b3c85b99-44db-4277-8c66-2ccd50888565\" }\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The replication request was accepted and the result is the transfer Id, which can be used for monitoring the transfer status.\n",
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "Transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "view_name",
            "in": "path",
            "description": "Name of the view.",
            "type": "string",
            "required": true
          },
          {
            "name": "space_id",
            "in": "query",
            "description": "Space Id in which view exist.",
            "type": "string",
            "required": true
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "The Id of the provider from which the replica will be evicted. By default the replicas will be evicted in the provider handling this REST call.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "migration_provider_id",
            "in": "query",
            "description": "The Id of the provider to which the replicas should be synchronized before being evicted.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "descending",
            "in": "query",
            "description": "Return the documents in descending order (by key).",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "key",
            "in": "query",
            "description": "Return only documents that match the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of the returned documents to the specified number.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this number of records before starting to return the results.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "startkey",
            "in": "query",
            "description": "Return records with a value equal to or greater than the specified key. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "startkey_docid",
            "in": "query",
            "description": "Return records starting with the specified document Id.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey",
            "in": "query",
            "description": "Stop returning records when the specified key is reached. Key must be specified as a JSON value.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "endkey_docid",
            "in": "query",
            "description": "Stop returning records when the specified document Id is reached.\n",
            "type": "string",
            "required": false
          },
          {
            "name": "inclusive_end",
            "in": "query",
            "description": "Specifies whether the specified end key is included in the result. ***Note:*** Do not use `inclusive_end` with `key` or `keys`.\n",
            "type": "boolean",
            "required": false,
            "default": false
          },
          {
            "name": "stale",
            "in": "query",
            "description": "Allow records from a stale view to be used. Allowed values are `ok`, `update_after` or `false`.\n",
            "type": "string",
            "required": false,
            "default": "update_after",
            "enum": [
              "ok",
              "update_after",
              "false"
            ]
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Specify the bounding box for a spatial query (e.g. ?bbox=-180,-90,0,0)\n",
            "type": "string",
            "required": false
          },
          {
            "name": "spatial",
            "in": "query",
            "description": "Enable spatial type of query. When querying the file-popularity view, the `start_range` and\n`end_range` constraints should be specified as 6-dimensional arrays, with the following fields:\n`[SizeLowerLimit, LastOpenHoursEpochLowerLimit, TotalOpenLowerLimit, HoursOpenAvgLowerLimit, DayOpenAvgLowerLimit, MonthOpenAvgLowerLimit]`.\n",
            "type": "boolean",
            "required": false
          },
          {
            "name": "start_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `start_range=[1,0,0,0,0,0]`)."
          },
          {
            "name": "end_range",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Array specifying the range in spatial queries (e.g. `end_range=[null,null,null,null,null,null]`)."
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli evictReplicasByView space_id=$SPACE_ID view_name=$VIEW_NAME key=value1"
          }
        ]
      }
    },
    "/transfers/{tid}": {
      "get": {
        "operationId": "get_transfer_status",
        "x-onedata-gri": {
          "type": "op_transfer",
          "id": "?BINDING(tid)",
          "aspect": "instance"
        },
        "tags": [
          "Transfer"
        ],
        "summary": "Get transfer status",
        "x-bash-codegen-description": "Returns status of specific transfer.\n\nThis operation requires `space_view_transfers` privilege.\n",
        "description": "Returns status of specific transfer.\n\nThis operation requires `space_view_transfers` privilege.\n\n***Example cURL requests***\n\n**Get status of specific transfer**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/transfers/$TRANSFER_ID\"\n\n{\n  \"fileId\": \"00000000005CF4706775696423745F772D67686431633765446F4D76546D6F2D67575F3361737A7670486B477A7936587734507265584A7723394A4F355F5F396E4C31623031594576776E667431723230677767776C6B497031394E445F6E3868677873\",\n  \"userId\": \"admin\",\n  \"rerunId\": null,\n  \"path\":\"/space/tmp\",\n  \"transferStatus\": \"completed\",\n  \"replicationStatus\": \"completed\",\n  \"invalidationStatus\": \"skipped\",\n  \"replicaEvictionStatus\": \"skipped\",\n  \"targetProviderId\": \"HICATChd8wzbFmB6qfGby9VN7MfdXgI1qC4pULGVm8Q\",\n  \"replicatingProviderId\": \"HICATChd8wzbFmB6qfGby9VN7MfdXgI1qC4pULGVm8Q\",\n  \"evictingProviderId\": null,\n  \"callback\":null,\n  \"filesToProcess\": 1,\n  \"filesProcessed\": 1,\n  \"filesTransferred\": 1,\n  \"filesReplicated\": 1,\n  \"failedFiles\": 0,\n  \"filesInvalidated\": 0,\n  \"fileReplicasEvicted\": 0,\n  \"filesProcessed\": 1,\n  \"bytesTransferred\": 10485760000,\n  \"bytesReplicated\": 10485760000,\n  \"scheduleTime\": 1504688800,\n  \"startTime\": 15046888765,\n  \"finishTime\": 1504688814,\n  \"lastUpdate\": 1504988814,\n  \"minHist\": {\n    \"ASDxicvuisodr78w979879wer\": [419430400, 1153433600, 1258291200, 1468006400, 1048576000, 1048576000, 1048576000, 1153433600, 629145600, 1258291200, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  },\n  \"hrHist\": {\n    \"ASDxicvuisodr78w979879wer\": [10485760000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  },\n  \"dyHist\": {\n    \"ASDxicvuisodr78w979879wer\": [10485760000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  },\n  \"mthHist\": {\n    \"ASDxicvuisodr78w979879wer\": [10485760000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }\n}\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Transfer status.",
            "schema": {
              "$ref": "#/definitions/FileTransferStatus"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Transfer with provided Id was not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "description": "Transfer Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getTransferStatus tid=$TRANSFER_ID"
          }
        ]
      },
      "delete": {
        "operationId": "cancel_transfer",
        "x-onedata-gri": {
          "type": "op_transfer",
          "id": "?BINDING(tid)",
          "aspect": "cancel"
        },
        "tags": [
          "Transfer"
        ],
        "summary": "Cancel specific transfer",
        "x-bash-codegen-description": "Cancels a scheduled or active transfer. Returns 400 in case the transfer\nis already completed, canceled or failed.\n\nThis operation requires `space_cancel_replication` privilege in case of canceling replication,\n`space_cancel_eviction` privilege in case of canceling eviction and both of them when\ncanceling migration.\n\nHowever, canceling your own transfers does not require any privileges.\n",
        "description": "Cancels a scheduled or active transfer. Returns 400 in case the transfer is already completed, canceled or failed.\n\nThis operation requires `space_cancel_replication` privilege in case of canceling replication,\n`space_cancel_eviction` privilege in case of canceling eviction and both of them when\ncanceling migration.\n\nHowever, canceling your own transfers does not require any privileges.\n\n***Example cURL requests***\n\n**Cancel specific transfer**\n```bash\ncurl -X DELETE -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/transfers/$TRANSFER_ID\"\n```\n",
        "responses": {
          "204": {
            "description": "The transfer has been canceled."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Transfer with provided Id was not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "description": "Transfer Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli cancelTransfer tid=$TRANSFER_ID"
          }
        ]
      }
    },
    "/transfers/{tid}/rerun": {
      "post": {
        "operationId": "rerun_transfer",
        "x-onedata-gri": {
          "type": "op_transfer",
          "id": "?BINDING(tid)",
          "aspect": "rerun"
        },
        "tags": [
          "Transfer"
        ],
        "summary": "Rerun ended transfer",
        "x-bash-codegen-description": "Reruns ended transfer by creating a new, identical transfer.\n\nThis operation requires:\n  * `space_schedule_replication` when rerunning replication\n  * `space_schedule_eviction` when rerunning eviction\n  * `space_schedule_replication` and `space_schedule_eviction` when rerunning migration\n\nAdditionally, rerunning transfers using views requires `space_query_views` privilege.\n",
        "description": "Reruns ended transfer by creating a new, identical transfer.\n\nThis operation requires:\n  * `space_schedule_replication` when rerunning replication\n  * `space_schedule_eviction` when rerunning eviction\n  * `space_schedule_replication` and `space_schedule_eviction` when rerunning migration\n\nAdditionally, rerunning transfers using views requires `space_query_views` privilege.\n\n***Example cURL requests***\n\n**Rerun finished transfer**\n```bash\ncurl -X POST -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/transfers/$TRANSFER_ID/rerun\"\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The rerun request has been accepted and the result is the transfer Id, which can be used for monitoring the new transfer status. Also URI of the new transfer in form https://$HOST/api/v3/oneprovider/transfers/{tid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "URI of the new transfer.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "New transfer Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Transfer with provided Id was not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "description": "Transfer Id.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli rerunTransfer tid=$TRANSFER_ID"
          }
        ]
      }
    },
    "/metrics/space/{sid}": {
      "get": {
        "operationId": "get_space_metrics",
        "x-onedata-gri": {
          "type": "op_metrics",
          "id": "?BINDING(sid)",
          "aspect": "space"
        },
        "summary": "Get space metrics",
        "tags": [
          "Monitoring"
        ],
        "x-bash-codegen-description": "Returns space related metrics of specified type.\n\nThis operation requires `space_view_statistics` privilege.\n",
        "description": "Returns space related metrics of specified type.\n\nThis operation requires `space_view_statistics` privilege.\n\n***Example cURL requests***\n\n**Get storage space used metrics**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/metrics/space/$SPACE_ID?metric=storage_used\"\n\n{\n  \"providerId\": \"4efc4a0c-0a61-4766-8fe9-c3d7fb414da8\",\n  \"rrd\": {\n      \"about\": \"RRDtool graph JSON output\",\n      \"data\": [[ 5.6435528434 ], [ 2.6435528434 ], [ 4.6435528434 ] ],\n      \"meta\": {\n          \"start\": 1465466700,\n          \"end\": 1465553100,\n          \"legend\": [\"space f4f1799f-4954-4d7a-bc31-630998883296; metric storage_used; oneprovider Id 4efc4a0c-0a61-4766-8fe9-c3d7fb414da8; storage_used[bytes]\"],\n          \"step\": 300\n      }\n    }\n}\n```\n",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "The monitoring data retrieved in the form of RRD record exported to JSON or XML.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Metrics"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Id of a specific space for which the monitoring metrics should be retrieved",
            "type": "string",
            "required": true
          },
          {
            "name": "metric",
            "in": "query",
            "description": "The type of metrics to retrieve.",
            "type": "string",
            "required": true,
            "enum": [
              "storage_quota",
              "storage_used",
              "data_access",
              "block_access",
              "connected_users",
              "remote_transfer"
            ]
          },
          {
            "name": "step",
            "in": "query",
            "description": "The resolution of the monitoring data to return - default is 5m [5 minutes].",
            "type": "string",
            "required": false,
            "enum": [
              "5m",
              "1h",
              "1d",
              "1m"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli -ac json getSpaceMetrics sid=$SPACE_ID metric=storage_quota step=5m"
          }
        ]
      }
    },
    "/metrics/space/{sid}/user/{uid}": {
      "get": {
        "operationId": "get_space_user_metrics",
        "x-onedata-gri": {
          "type": "op_metrics",
          "id": "?BINDING(sid)",
          "aspect": "{user, ?BINDING(uid)}"
        },
        "summary": "Get space user metrics",
        "tags": [
          "Monitoring"
        ],
        "x-bash-codegen-description": "Returns space related metrics of specified type for specific user.\n\nThis operation requires `space_view_statistics` privilege.\n",
        "description": "Returns space related metrics of specified type for specific user.\n\nThis operation requires `space_view_statistics` privilege.\n\n***Example cURL requests***\n\n**Get user storage block access metrics with 1 hour resolution**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/metrics/space/$SPACE_ID/user/$USER_ID?metric=block_access&step=1h\"\n\n{\n  \"providerId\": \"4efc4a0c-0a61-4766-8fe9-c3d7fb414da8\",\n  \"rrd\": {\n      \"about\": \"RRDtool graph JSON output\",\n      \"data\": [[ 5.6435528434 ], [ 2.6435528434 ], [ 4.6435528434 ] ],\n      \"meta\": {\n          \"start\": 1465466700,\n          \"end\": 1465553100,\n          \"legend\": [\"space fe14b4cc-bce0-4220-8394-a911d11a0a53; metric storage_used; oneprovider Id 4efc4a0c-0a61-4766-8fe9-c3d7fb414da8; storage_used[bytes]\"],\n          \"step\": 3600\n      }\n    }\n}\n```\n",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "The monitoring data retrieved in the form of RRD record exported to JSON or XML.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Metrics"
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Id of a specific space for which the monitoring metrics should be retrieved.",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "Id of a specific user within a space for which the monitoring metrics should be limited to.",
            "type": "string",
            "required": true
          },
          {
            "name": "metric",
            "in": "query",
            "description": "The type of metrics to retrieve.",
            "type": "string",
            "required": true,
            "enum": [
              "storage_used",
              "data_access",
              "block_access",
              "remote_transfer"
            ]
          },
          {
            "name": "step",
            "in": "query",
            "description": "The resolution of the monitoring data to return - default is 5m [5 minutes].",
            "type": "string",
            "required": false,
            "enum": [
              "5m",
              "1h",
              "1d",
              "1m"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli -ac xml getSpaceUserMetrics sid=$SPACE_ID uid=$USER_ID metric=metadata_access_ops step=1h"
          }
        ]
      }
    },
    "/changes/metadata/{sid}": {
      "post": {
        "operationId": "get_space_changes",
        "x-onedata-custom-handler": "changes_stream_handler",
        "x-onedata-gri": {
          "type": "op_metrics",
          "id": "?BINDING(sid)",
          "aspect": "changes"
        },
        "tags": [
          "Monitoring"
        ],
        "summary": "Subscribe to file events",
        "x-bash-codegen-description": "This method subscribes through HTTP streaming on events of specific type\nfor a given space.\n\nUntil the connection is kept alive, the events will be streamed to\nsubscribers as soon as they occur. The optional `timeout` parameter\ncan be used to automatically disconnect  when no events occur in a\ngiven time window.\n\nThis operation requires `space_view_changes_stream` privilege.\n",
        "description": "This method subscribes through HTTP streaming on events of specific type for a given space.\n\nUntil the connection is kept alive, the events will be streamed to subscribers as soon as they are occur. The optional `timeout` parameter can be used to automatically disconnect  when no events occur in a given time window.\n\nThis operation requires `space_view_changes_stream` privilege.\n\n***Example cURL requests***\n\n**Listen to space change events**\n```bash\ncurl -N -X POST -d \"@./changes_req.json\" -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/changes/metadata/$SPACE_ID\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Subscription to events has been successful.",
            "schema": {
              "$ref": "#/definitions/FileMetadataChange"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Oneprovider REST API not available.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "Space Id.",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Specification of metadata changes to observe.",
            "schema": {
              "$ref": "#/definitions/MetadataChangesStreamRequest"
            },
            "required": true
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Optional timeout in milliseconds, which allows to automatically break connection when no event occured in specified time. By default the timeout is unlimited.\n",
            "type": "integer",
            "required": false
          },
          {
            "name": "last_seq",
            "in": "query",
            "description": "Last known file metadata sequence number\n",
            "type": "integer",
            "required": false
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "cat changes_req.json | oneprovider-rest-cli streamSpaceChanges sid=$SPACE_ID timeout=10000 last_seq=124721 -"
          }
        ]
      }
    },
    "/qos_entry": {
      "post": {
        "operationId": "add_qos_entry",
        "x-onedata-parse_body": "as_json_params",
        "x-onedata-gri": {
          "type": "op_qos",
          "aspect": "instance"
        },
        "tags": [
          "QoS"
        ],
        "summary": "Add QoS entry",
        "x-bash-codegen-description": "Adds new QoS entry for given file or directory. This triggers\ndata replication (if needed) based on requirements defined in new QoS entry.\n",
        "description": "Adds new QoS entry for given file or directory. This triggers\ndata replication (if needed) based on requirements defined in new QoS entry.\n\n***Example cURL requests***\n\n**Add QoS entry for file**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X POST \\\n-H \"Content-type: application/json\" \\\n-d '{ \"expression\": \"country=FR\", \"replicasNum\": 2, \"fileId\": $FILE_ID }' \\\n\"https://$HOST/api/v3/oneprovider/qos_entry\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The request has been accepted and the result is the QoS entry Id (e.g. 'fc05cfc92eda7a054b835bc1ee4a1372'). Also URI of the QoS entry in form https://$HOST/api/v3/oneprovider/qos_entry/{qid} is returned in the response `Location` header.\n",
            "headers": {
              "Location": {
                "description": "URI of the QoS entry.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "qosEntryId": {
                  "type": "string",
                  "description": "QoS entry Id."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "QoS entry properties",
            "schema": {
              "$ref": "#/definitions/QosCreateRequest"
            },
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli addQosEntry fileId=$FILE_ID expression='country=FR' replicasNum=2"
          }
        ]
      }
    },
    "/qos_entry/{qid}": {
      "get": {
        "operationId": "get_qos_entry",
        "x-onedata-gri": {
          "type": "op_qos",
          "id": "?BINDING(qid)",
          "aspect": "instance"
        },
        "tags": [
          "QoS"
        ],
        "summary": "Get QoS entry",
        "x-bash-codegen-description": "Returns detailed information about particular QoS entry.\n",
        "description": "Returns detailed information about particular QoS entry.\n\n***Example cURL requests***\n\n**Get detailed information about QoS entry**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/qos-entry/$QOS_ENTRY_ID\"\n\n{\n  \"qosEntryId\": \"c84f669f9522c46976fee490d80651f0\",\n  \"fileId\": \"$FILE_ID\",\n  \"qosExpression\": \"country=FR\",\n  \"replicasNum\": 2,\n  \"fulfilled\": true\n}\n\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Information about QoS entry.",
            "schema": {
              "$ref": "#/definitions/QosEntry"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "QoS entry not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "qid",
            "in": "path",
            "description": "QoS entry Id (e.g. 'c84f669f9522c46976fee490d80651f0')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getQosEntry qid=$QOS_ENTRY_ID"
          }
        ]
      },
      "delete": {
        "operationId": "remove_qos_entry",
        "x-onedata-gri": {
          "type": "op_qos",
          "id": "?BINDING(qid)",
          "aspect": "instance"
        },
        "summary": "Remove QoS entry",
        "tags": [
          "QoS"
        ],
        "x-bash-codegen-description": "Removes QoS entry.\n",
        "description": "Removes QoS entry.\n\n***Example cURL requests***\n\n**Remove QoS entry.**\n```bash\ncurl -H \"X-Auth-Token: $TOKEN\" -X DELETE \\\n-H \"Content-type: application/json\" \\\n\"https://$HOST/api/v3/oneprovider/qos-entry/$QOS_ENTRY_ID\"\n```\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "QoS entry has been deleted."
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "QoS entry not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "qid",
            "in": "path",
            "description": "QoS entry Id (e.g. 'c84f669f9522c46976fee490d80651f0')",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli removeQosEntry qid=$QOS_ENTRY_ID"
          }
        ]
      }
    },
    "/data/{id}/qos_summary": {
      "get": {
        "operationId": "get_file_qos_summary",
        "x-onedata-gri": {
          "type": "op_file",
          "id": "?OBJECTID_BINDING(id)",
          "aspect": "file_qos_summary"
        },
        "tags": [
          "QoS"
        ],
        "summary": "Get QoS summary for file or directory",
        "x-bash-codegen-description": "Returns QoS summary for file or directory.  \nQoS summary contains information about effective QoS, which is calculated by merging\nQoS entries defined directly for file or directory with QoS entries defined for all\nits ancestors.  \n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n",
        "description": "Returns QoS summary for file or directory.  \nQoS summary contains information about effective QoS, which is calculated by merging\nQoS entries defined directly for file or directory with QoS entries defined for all\nits ancestors.  \n\nTo lookup file Id using file path, please use [this endpoint](#operation/lookup_file_id).\n\n***Example cURL requests***\n\n**Get file QoS summary**\n```bash\ncurl -X GET -H \"X-Auth-Token: $TOKEN\" \\\n\"https://$HOST/api/v3/oneprovider/data/$FILE_ID/qos_entries\"\n\n{\n  \"entries\": [{\"$QOS_ENTRY_ID\": false}],\n  \"assignedEntries\": {\"$STORAGE_ID\": [\"$QOS_ENTRY_ID\"]},\n  \"fulfilled\": false\n}\n\n```\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "QoS summary for file or directory.",
            "schema": {
              "$ref": "#/definitions/QosSummary"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "File or directory not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the file or directory.",
            "type": "string",
            "required": true
          }
        ],
        "x-code-samples": [
          {
            "lang": "Shell",
            "source": "oneprovider-rest-cli getFileQosSummary id=$FILE_ID"
          }
        ]
      }
    }
  },
  "definitions": {
    "Configuration": {
      "description": "Public information about Oneprovider configuration and version.",
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "Id of the Oneprovider"
        },
        "name": {
          "type": "string",
          "description": "Oneprovider's name"
        },
        "domain": {
          "type": "string",
          "description": "Oneprovider's domain"
        },
        "onezoneDomain": {
          "type": "string",
          "description": "Domain of the Onezone where this Oneprovider is registered"
        },
        "version": {
          "type": "string",
          "description": "Version of this Oneprovider"
        },
        "build": {
          "type": "string",
          "description": "Build number of this Oneprovider"
        },
        "compatibleOnezoneVersions": {
          "type": "array",
          "description": "List of compatible Onezone versions",
          "items": {
            "type": "string"
          }
        },
        "compatibleOneproviderVersions": {
          "type": "array",
          "description": "List of compatible Oneprovider versions",
          "items": {
            "type": "string"
          }
        },
        "compatibleOneclientVersions": {
          "type": "array",
          "description": "List of compatible Oneclient versions",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Generic error model for REST requests.",
      "properties": {
        "error": {
          "description": "Identifier representing internal error code.",
          "type": "string"
        },
        "error_description": {
          "description": "Detailed error message.",
          "type": "string"
        }
      },
      "example": {
        "error": "invalid_token",
        "error_description": "Provided token could not be validated."
      }
    },
    "DirectoryChildren": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "description": "The list of directory files and subdirectories.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Id of the file or subdirectory."
              },
              "name": {
                "type": "string",
                "description": "Name of the file or subdirectory."
              }
            }
          }
        }
      },
      "example": {
        "children": [
          {
            "id": "YzQ3OThlYjItZGJkMi00ODZmLWFlOTQtMGU2ZmEwYTUwNzFk",
            "name": "File1.txt"
          },
          {
            "id": "NjIwZTE2NDItNGYyZC00NWYyLWI0ZWItMzdmOGE5NThiNDZm",
            "name": "Dir2"
          }
        ]
      }
    },
    "FileDistribution": {
      "type": "array",
      "description": "Describes distribution of a single file among different storage providers. For each provider, this data type provides a list of byte ranges  (specified as a list of pairs [offset, size]), which describe which blocks of a given file are stored at which provider.\n",
      "items": {
        "type": "object",
        "properties": {
          "providerId": {
            "type": "string",
            "description": "Id of the provider"
          },
          "blocks": {
            "type": "array",
            "description": "The list of blocks in byte ranges stored at that provider.",
            "items": {
              "type": "array",
              "description": "File block specified as a pair [offset, size].",
              "items": {
                "type": "integer"
              },
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      },
      "example": [
        {
          "providerId": "b4687585-57d5-4edb-a192-0f3b1cab636b",
          "blocks": [
            [
              0,
              4
            ],
            [
              10,
              20
            ]
          ]
        },
        {
          "providerId": "a0274289-6f8a-482f-86f8-4a518760749c",
          "blocks": [
            [
              1024,
              2048
            ],
            [
              4096,
              1048576
            ]
          ]
        }
      ]
    },
    "FileAttribute": {
      "type": "object",
      "description": "File attribute.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the attribute (e.g. 'mode')"
        },
        "value": {
          "type": "string",
          "description": "Value of the file attribute. Can be"
        }
      },
      "example": {
        "name": "mode",
        "value": "0444"
      }
    },
    "FileTransferStatus": {
      "type": "object",
      "description": "File transfer status.",
      "properties": {
        "fileId": {
          "type": "string",
          "description": "Id of the file or directory being transferred."
        },
        "userId": {
          "type": "string",
          "description": "Id of the user that started the transfer."
        },
        "rerunId": {
          "type": "string",
          "description": "If the transfer was rerun, this field contains the Id of the new transfer, otherwise null."
        },
        "path": {
          "type": "string",
          "description": "Path to the file or directory in the virtual file system."
        },
        "transferStatus": {
          "type": "string",
          "description": "The status of replication request. This field is `deprecated` and it might be removed in future release. Please refer to `replicationStatus`.",
          "enum": [
            "scheduled",
            "enqueued",
            "skipped",
            "active",
            "completed",
            "aborting",
            "cancelled",
            "failed"
          ]
        },
        "replicationStatus": {
          "type": "string",
          "description": "The status of replication request.",
          "enum": [
            "scheduled",
            "enqueued",
            "skipped",
            "active",
            "completed",
            "aborting",
            "cancelled",
            "failed"
          ]
        },
        "invalidationStatus": {
          "type": "string",
          "description": "The status of replica eviction request. This field is `deprecated` and it might be removed in future release. Please refer to `replicaEvictionStatus`.",
          "enum": [
            "scheduled",
            "enqueued",
            "skipped",
            "active",
            "completed",
            "aborting",
            "cancelled",
            "failed"
          ]
        },
        "replicaEvictionStatus": {
          "type": "string",
          "description": "The status of replica eviction request.",
          "enum": [
            "scheduled",
            "enqueued",
            "skipped",
            "active",
            "completed",
            "aborting",
            "cancelled",
            "failed"
          ]
        },
        "targetProviderId": {
          "type": "string",
          "description": "The Id of the target provider to which the replication was requested. This field is `deprecated` and it might be removed in future release. Please refer to `replicatingProviderId`."
        },
        "replicatingProviderId": {
          "type": "string",
          "description": "The Id of the target provider to which the replication was requested."
        },
        "evictingProviderId": {
          "type": "string",
          "description": "The Id of the provider whose file replica will be evicted."
        },
        "callback": {
          "type": "string",
          "description": "Optional callback URL, which will be invoked on transfer completion."
        },
        "filesToProcess": {
          "type": "integer",
          "description": "Total number of files in this transfer."
        },
        "filesProcessed": {
          "type": "integer",
          "description": "Number of files already processed."
        },
        "filesTransferred": {
          "type": "integer",
          "description": "Number of files already replicated. This field is `deprecated` and it might be removed in future release. Please refer to `filesReplicated`."
        },
        "filesReplicated": {
          "type": "integer",
          "description": "Number of files already replicated."
        },
        "failedFiles": {
          "type": "integer",
          "description": "Number of files for which invalidation or replication has failed."
        },
        "filesInvalidated": {
          "type": "integer",
          "description": "Number of files already evicted. This field is `deprecated` and it might be removed in future release. Please refer to `fileReplicasEvicted`."
        },
        "fileReplicasEvicted": {
          "type": "integer",
          "description": "Number of files already evicted."
        },
        "bytesTransferred": {
          "type": "integer",
          "description": "Number of bytes already replicated. This field is `deprecated` and it might be removed in future release. Please refer to `bytesReplicated`."
        },
        "bytesReplicated": {
          "type": "integer",
          "description": "Number of bytes already replicated."
        },
        "scheduleTime": {
          "type": "integer",
          "description": "Schedule time in seconds (POSIX epoch timestamp)."
        },
        "startTime": {
          "type": "integer",
          "description": "Start time in seconds (POSIX epoch timestamp)."
        },
        "finishTime": {
          "type": "integer",
          "description": "Finish time in seconds (POSIX epoch timestamp)."
        },
        "lastUpdate": {
          "type": "integer",
          "description": "Last transfer update time in seconds (POSIX epoch timestamp)."
        },
        "minHist": {
          "type": "object",
          "description": "Replication statistics within the last minute, per provider.",
          "additionalProperties": {
            "type": "array",
            "description": "Bytes replicated histogram for the last minute with 5 seconds window.",
            "items": {
              "type": "integer"
            }
          }
        },
        "hrHist": {
          "type": "object",
          "description": "Replication statistics within the last hour, per provider.",
          "additionalProperties": {
            "type": "array",
            "description": "Bytes replicated histogram for the last hour with 1 minute window.",
            "items": {
              "type": "integer"
            }
          }
        },
        "dyHist": {
          "type": "object",
          "description": "Replication statistics within the last day, per provider.",
          "additionalProperties": {
            "type": "array",
            "description": "Bytes replicated histogram for the last day with 1 hour window.",
            "items": {
              "type": "integer"
            }
          }
        },
        "mthHist": {
          "type": "object",
          "description": "Replication statistics within the last month, per provider.",
          "additionalProperties": {
            "type": "array",
            "description": "Bytes replicated histogram for the last month with 1 day window.",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "example": {
        "fileId": "00000000005CF4706775696423745F772D67686431633765446F4D76546D6F2D67575F3361737A7670486B477A7936587734507265584A7723394A4F355F5F396E4C31623031594576776E667431723230677767776C6B497031394E445F6E3868677873",
        "userId": "admin",
        "rerunId": null,
        "path": "/My Space 1/Dir2/file3.txt",
        "transferStatus": "completed",
        "replicationStatus": "completed",
        "invalidationStatus": "skipped",
        "targetProviderId": "HICATChd8wzbFmB6qfGby9VN7MfdXgI1qC4pULGVm8Q",
        "replicatingProviderId": "HICATChd8wzbFmB6qfGby9VN7MfdXgI1qC4pULGVm8Q",
        "invalidatingProviderId": null,
        "filesToProcess": 1,
        "filesProcessed": 1,
        "filesTransferred": 1,
        "filesReplicated": 1,
        "failedFiles": 0,
        "filesInvalidated": 0,
        "bytesTransferred": 10485760000,
        "bytesReplicated": 10485760000,
        "scheduleTime": 1504688800,
        "startTime": 15046888765,
        "finishTime": 1504688814,
        "lastUpdate": 1504988814,
        "minHist": {
          "ASDxicvuisodr78w979879wer": [
            419430400,
            1153433600,
            1258291200,
            1468006400,
            1048576000,
            1048576000,
            1048576000,
            1153433600,
            629145600,
            1258291200,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        "hrHist": {
          "ASDxicvuisodr78w979879wer": [
            10485760000,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        "dyHist": {
          "ASDxicvuisodr78w979879wer": [
            10485760000,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        "mthHist": {
          "ASDxicvuisodr78w979879wer": [
            10485760000,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      }
    },
    "FilePath": {
      "description": "Mapping between file Id and file path.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the file or directory."
        },
        "path": {
          "type": "string",
          "description": "Path to the file or directory."
        }
      }
    },
    "Callback": {
      "type": "object",
      "description": "Callback definition.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL which should be called, when requested action completed."
        }
      },
      "example": {
        "url": "http://monitoring.example.com:8080/notifications"
      }
    },
    "FileAttributes": {
      "type": "object",
      "description": "File or directory basic attributes.",
      "properties": {
        "name": {
          "type": "string",
          "description": "File name."
        },
        "type": {
          "type": "string",
          "description": "Type of the file.",
          "enum": [
            "reg",
            "dir",
            "lnk"
          ]
        },
        "mode": {
          "type": "integer",
          "description": "POSIX file permissions in decimal format"
        },
        "size": {
          "type": "integer",
          "description": "Size of the file in bytes."
        },
        "atime": {
          "type": "integer",
          "description": "Last access timestamp (in seconds)."
        },
        "mtime": {
          "type": "integer",
          "description": "Last modification timestamp (in seconds)."
        },
        "ctime": {
          "type": "integer",
          "description": "Last attributes modification timestamp (in seconds)."
        },
        "owner_id": {
          "type": "string",
          "description": "Id of the owner of this file."
        },
        "file_id": {
          "type": "string",
          "description": "Id of the file."
        },
        "provider_id": {
          "type": "string",
          "description": "Id of the provider on which this file was created."
        },
        "storage_user_id": {
          "type": "string",
          "description": "Id of the owner of this file on storage."
        },
        "storage_group_id": {
          "type": "string",
          "description": "Id of the group owner of this file on storage."
        },
        "shares": {
          "type": "array",
          "description": "The list of Ids of shares created for this file.",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "name": "File1.txt",
        "type": "REG",
        "mode": 511,
        "size": 1024,
        "atime": 1464958683054,
        "mtime": 1464958683051,
        "ctime": 1464958681054,
        "owner_id": "MTZjYzc1ZWEtN2ZjNC00Y2QxLTljYzgtMTJmYTMxNTk1YzUw",
        "file_id": "NjIwZTE2NDItNGYyZC00NWYyLWI0ZWItMzdmOGE5NThiNDZm",
        "provider_id": "YzQ3OThlYjItZGJkMi00ODZmLWFlOTQtMGU2ZmEwYTUwNzFk",
        "storage_user_id": 1935313,
        "storage_group_id": 1101841,
        "shares": [
          "1d24c36707d99197c6cd995810a43aca",
          "6825604b0eb6a47b8b7a04b6369eb24d"
        ]
      }
    },
    "FileMetadataChange": {
      "type": "object",
      "description": "Metadata changes.",
      "properties": {
        "fileId": {
          "type": "string",
          "description": "Unique Id of the file."
        },
        "filePath": {
          "type": "string",
          "description": "Absolute path to the file (starting with the Space name)."
        },
        "seq": {
          "type": "string",
          "description": "Sequence number (version) of the metadata document."
        },
        "fileMeta": {
          "type": "object",
          "description": "Requested fileMeta fields and additional information.",
          "properties": {
            "rev": {
              "type": "string",
              "description": "Last revision of fileMeta."
            },
            "mutators": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Providers that changed this metadata."
              }
            },
            "deleted": {
              "type": "boolean",
              "description": "Indicates whether this metadata was deleted or not."
            },
            "changed": {
              "type": "boolean",
              "description": "Indicates whether changes occured to this metadata or not."
            },
            "fields": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "File name."
                },
                "type": {
                  "type": "string",
                  "description": "File type.",
                  "enum": [
                    "REG",
                    "DIR"
                  ]
                },
                "mode": {
                  "type": "integer",
                  "description": "POSIX file permissions."
                },
                "owner": {
                  "type": "string",
                  "description": "File owner."
                },
                "group_owner": {
                  "type": "string",
                  "description": "File group owner."
                },
                "provider_id": {
                  "type": "string",
                  "description": "Id of provider which created this file."
                },
                "shares": {
                  "type": "array",
                  "description": "Array of this file shares Ids.",
                  "items": {
                    "type": "string",
                    "description": "Share Id."
                  }
                },
                "deleted": {
                  "type": "boolean",
                  "description": "Set to 'true' when file itself was deleted but file metadata must remain for some time. Otherwise false."
                }
              }
            }
          }
        },
        "fileLocation": {
          "type": "object",
          "description": "Requested fileLocation fields and additional information.",
          "properties": {
            "rev": {
              "type": "string",
              "description": "Last revision of fileLocation."
            },
            "mutators": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Providers that changed this metadata."
              }
            },
            "deleted": {
              "type": "boolean",
              "description": "Indicates whether this metadata was deleted or not."
            },
            "changed": {
              "type": "boolean",
              "description": "Indicates whether changes occured to this metadata or not."
            },
            "fields": {
              "type": "object",
              "properties": {
                "provider_id": {
                  "type": "string",
                  "description": "Provider Id in which change occured."
                },
                "storage_id": {
                  "type": "string",
                  "description": "Storage Id in which file exists."
                },
                "size": {
                  "type": "integer",
                  "description": "File size."
                },
                "space_id": {
                  "type": "string",
                  "description": "Space Id in which space exists."
                },
                "storage_file_created": {
                  "type": "boolean",
                  "description": "Indicates whether file was created on storage or only metadata exists."
                }
              }
            }
          }
        },
        "times": {
          "type": "object",
          "description": "Requested times fields and additional information.",
          "properties": {
            "rev": {
              "type": "string",
              "description": "Last revision of times."
            },
            "mutators": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Providers that changed this metadata."
              }
            },
            "deleted": {
              "type": "boolean",
              "description": "Indicates whether this metadata was deleted or not."
            },
            "changed": {
              "type": "boolean",
              "description": "Indicates whether changes occured to this metadata or not."
            },
            "fields": {
              "type": "object",
              "properties": {
                "atime": {
                  "type": "integer",
                  "description": "POSIX atime."
                },
                "mtime": {
                  "type": "integer",
                  "description": "POSIX mtime."
                },
                "ctime": {
                  "type": "integer",
                  "description": "POSIX ctime."
                }
              }
            }
          }
        },
        "customMetadata": {
          "type": "object",
          "description": "Requested customMetadata fields and additional information.",
          "properties": {
            "rev": {
              "type": "string",
              "description": "Last revision of customMetadata."
            },
            "mutators": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Providers that changed this metadata."
              }
            },
            "deleted": {
              "type": "boolean",
              "description": "Indicates whether this metadata was deleted or not."
            },
            "changed": {
              "type": "boolean",
              "description": "Indicates whether changes occured to this metadata or not."
            },
            "fields": {
              "type": "object",
              "description": "Retrieved xattr values. In case of missing fields `null` values are returned.\n"
            },
            "exists": {
              "type": "object",
              "description": "Map indicating whether given xattrs exists or not.\n"
            }
          }
        }
      },
      "required": [
        "fileId",
        "filePath",
        "seq"
      ],
      "example": {
        "fileId": "4efc4a0c-0a61-4766-8fe9-c3d7fb414da8",
        "filePath": "/Space1/dir2/file1.txt",
        "seq": 123,
        "fileMeta": {
          "rev": "2-c500a5eb026d9474429903d47841f9c5",
          "mutators": [
            "<<\"p1.1542789098.test\">>"
          ],
          "changed": true,
          "deleted": false,
          "fields": {
            "owner": "john"
          }
        },
        "customMetadata": {
          "rev": "1-09f941b4e8452ef6a244c5181d894814",
          "mutators": [
            "<<\"p1.1542789098.test\">>"
          ],
          "changed": false,
          "deleted": false,
          "exists": {
            "onedata_json": true
          },
          "fields": {
            "key1": "value1"
          }
        }
      }
    },
    "MetadataChangesStreamRequest": {
      "type": "object",
      "description": "Specification of metadata changes to observe and stream.",
      "properties": {
        "fileMeta": {
          "type": "object",
          "description": "Specification of fileMeta fields to observe.",
          "properties": {
            "always": {
              "type": "boolean",
              "default": false,
              "description": "Indicates whether specified fileMeta fields should be sent on other metadata changes."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "type",
                  "mode",
                  "owner",
                  "group_owner",
                  "provider_id",
                  "shares",
                  "deleted"
                ]
              }
            }
          }
        },
        "fileLocation": {
          "type": "object",
          "description": "Specification of fileLocation fields to observe.",
          "properties": {
            "always": {
              "type": "boolean",
              "default": false,
              "description": "Indicates whether specified fileLocation fields should be sent on other metadata changes."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "provider_id",
                  "storage_id",
                  "size",
                  "space_id",
                  "storage_file_created"
                ]
              }
            }
          }
        },
        "times": {
          "type": "object",
          "description": "Specification of times fields to observe.",
          "properties": {
            "always": {
              "type": "boolean",
              "default": false,
              "description": "Indicates whether specified times fields should be sent on other metadata changes."
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "atime",
                  "mtime",
                  "ctime"
                ]
              }
            }
          }
        },
        "customMetadata": {
          "type": "object",
          "description": "Specification of customMetadata fields to observe.",
          "properties": {
            "always": {
              "type": "boolean",
              "default": false,
              "description": "Indicates whether specified customMetadata fields should be sent on other metadata changes."
            },
            "fields": {
              "type": "array",
              "description": "Xattrs names to retrieve. In case of missing fields `null` values are returned. In order to fetch special attributes additional keys can be specified, namely  `onedata_json`, `onedata_rdf` or `onedata_keyvalue` (fetches all fields beside special ones).\n",
              "items": {
                "type": "string"
              }
            },
            "exists": {
              "type": "array",
              "description": "Xattrs names to check for existence. Existence of special attributes can also be checked by specifying `onedata_json`, `onedata_rdf` or `onedata_keyvalue`  (checks if any normal attribute exists).\n",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Space": {
      "type": "object",
      "description": "Basic information about space.",
      "properties": {
        "spaceId": {
          "type": "string",
          "description": "Id of the space."
        },
        "name": {
          "type": "string",
          "description": "Name of the space."
        },
        "providers": {
          "type": "array",
          "description": "The list of providers who support this space.",
          "items": {
            "$ref": "#/definitions/Provider"
          }
        }
      },
      "example": {
        "spaceId": "cda5d1bd-ca13-40ef-95e6-51fc1cc3b322",
        "name": "My Space 1",
        "providers": [
          {
            "providerId": "c40a3a39-0bbc-41cd-878f-5591f8c55014",
            "providerName": "MyPrivateCloud"
          },
          {
            "providerId": "27d58af6-82ef-4bdd-a596-c4ff080fbde6",
            "providerName": "PublicCloud1"
          }
        ]
      }
    },
    "Provider": {
      "type": "object",
      "description": "Provider instance definitions.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "The Id of the provider supporting the space."
        },
        "providerName": {
          "type": "string",
          "description": "The name of the provider"
        }
      },
      "example": {
        "providerId": "c40a3a39-0bbc-41cd-878f-5591f8c55014",
        "providerName": "MyFavouriteCloudProvider"
      }
    },
    "Metrics": {
      "type": "object",
      "description": "Export of monitoring metrics for specific provider.",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "The Id of the provider."
        },
        "rrd": {
          "description": "RRD database export.",
          "$ref": "#/definitions/RRD"
        }
      },
      "example": {
        "providerId": "4efc4a0c-0a61-4766-8fe9-c3d7fb414da8",
        "rrd": {
          "about": "RRDtool graph JSON output",
          "meta": {
            "start": 1465466700,
            "end": 1465553100,
            "step": 300,
            "legend": [
              "storage_free"
            ]
          },
          "data": [
            [
              5.6435528434
            ],
            [
              2.6435528434
            ],
            [
              4.6435528434
            ]
          ]
        }
      }
    },
    "RRD": {
      "type": "object",
      "description": "RRD database export.",
      "properties": {
        "about": {
          "type": "string",
          "description": "Name of the RRD database"
        },
        "meta": {
          "type": "object",
          "properties": {
            "start": {
              "type": "number",
              "description": "Start timestamp of the metrics."
            },
            "end": {
              "type": "number",
              "description": "End timestamp of the metrics."
            },
            "step": {
              "type": "number",
              "description": "Step of the metrics."
            },
            "legend": {
              "type": "array",
              "description": "Names of the columns in the exported array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "data": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "example": {
        "about": "RRDtool graph JSON output",
        "meta": {
          "start": 1465466700,
          "end": 1465553100,
          "step": 300,
          "legend": [
            "space s1; metric block_access; user u1; oneprovider Id p1; block_access_read[iops/s]",
            "space s1; metric block_access; user u1; oneprovider Id p1; block_access_write[iops/s]"
          ]
        },
        "data": [
          [
            null,
            null
          ],
          [
            5.6435528434,
            2.6435528434
          ],
          [
            5.6435528434,
            2.6435528434
          ],
          [
            5.6435528434,
            2.6435528434
          ],
          [
            null,
            null
          ],
          [
            0,
            0
          ]
        ]
      }
    },
    "View": {
      "type": "object",
      "description": "The basic view information.",
      "properties": {
        "spatial": {
          "description": "Whether given view is spatial or not.",
          "type": "boolean"
        },
        "mapFunction": {
          "description": "View mapping function.",
          "type": "string"
        },
        "reduceFunction": {
          "description": "View reduce function or null if there is none.",
          "type": "string"
        },
        "indexOptions": {
          "$ref": "#/definitions/ViewOptions"
        },
        "viewOptions": {
          "$ref": "#/definitions/ViewOptions"
        },
        "providers": {
          "description": "List of providers on which view can be queried.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "spatial",
        "mapFunction",
        "reduceFunction",
        "indexOptions",
        "viewOptions",
        "providers"
      ],
      "example": {
        "spatial": false,
        "mapFunction": "function (id, type, meta, ctx) {\\n        if(type == \\'custom_metadata\\' && meta[\\'onexattr\\']) {\\n            return [meta[\\'onexattr\\'], id];\\n        }\\n        return null;\\n    }",
        "spaceId": "ee4ac5df-095c-4760-bee9-a9bd2f37e508",
        "reduceFunction": "null,",
        "indexOptions": {
          "update_min_changes": 100
        },
        "viewOptions": {
          "update_min_changes": 100
        },
        "providers": [
          "ASIOdhxckvufysd78f9w394356yisudfsduuzxch"
        ]
      }
    },
    "Views": {
      "type": "object",
      "description": "The list of views names, nextPageToken is present when there is more to list.",
      "properties": {
        "views": {
          "type": "array",
          "description": "List of space views",
          "items": {
            "type": "string"
          }
        },
        "indexes": {
          "type": "array",
          "description": "List of space views (deprecated)",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Can be used to list views starting after the last on returned list (present only when there is more views to list)\n"
        }
      },
      "required": [
        "views",
        "indexes"
      ],
      "example": {
        "views": [
          "images",
          "videos"
        ],
        "indexes": [
          "images",
          "videos"
        ],
        "nextPageToken": "8471726779817b3a"
      }
    },
    "ViewOptions": {
      "type": "object",
      "description": "Options specified during creation or update of view conforming to the\n[automated view update](https://docs.couchbase.com/server/4.1/developer-guide/views-operation.html#automated-index-updates) description.\n",
      "properties": {
        "update_min_changes": {
          "description": "Minimum number of document changes to trigger re-viewing.",
          "type": "integer"
        },
        "replica_update_min_changes": {
          "description": "Minimum number of document changes to trigger re-viewing of a replica index.",
          "type": "integer"
        }
      },
      "example": {
        "update_min_changes": 100
      }
    },
    "ShareCreateRequest": {
      "type": "object",
      "description": "Share create request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the share."
        },
        "fileId": {
          "type": "string",
          "description": "Id of file or directory to be shared. The whole space can also be shared."
        }
      },
      "required": [
        "name",
        "fileId"
      ],
      "example": {
        "name": "MyShare",
        "fileId": "00000000005CF4706775696423745F772D67686431633765446F4D76546D6F2D67575F3361737A7670486B477A7936587734507265584A7723394A4F355F5F396E4C31623031594576776E667431723230677767776C6B497031394E445F6E3868677873"
      }
    },
    "Share": {
      "type": "object",
      "description": "Basic information about a share.",
      "properties": {
        "shareId": {
          "type": "string",
          "description": "Share Id."
        },
        "name": {
          "type": "string",
          "description": "The name of the share."
        },
        "publicUrl": {
          "type": "string",
          "description": "The publicly accessible URL for the share."
        },
        "fileType": {
          "type": "string",
          "description": "Denotes the type of the shared element (file or directory)",
          "enum": [
            "file",
            "dir"
          ]
        },
        "rootFileId": {
          "type": "string",
          "description": "The Id of the shared file or directory."
        },
        "spaceId": {
          "type": "string",
          "description": "The Id of the space in which the share was created."
        },
        "handleId": {
          "type": "string",
          "description": "The Id of open data Handle (e.g. DOI or PID) assigned to this share or null."
        }
      },
      "required": [
        "shareId",
        "name",
        "publicUrl",
        "fileType",
        "rootFileId",
        "spaceId"
      ],
      "example": {
        "shareId": "1f4b762b1380946e73aeca574c77f14c",
        "name": "MyNewShare",
        "publicUrl": "https://onedata.org/shares/1f4b762b1380946e73aeca574c77f14c",
        "fileType": "dir",
        "rootFileId": "00000000006CB663736861726547756964233339643236366165646365\\ 6266666164353939663761373734313235363166342336656331613534313362366634653\\ 2623031613563383561386664373937653223316634623736326231333830393436653733\\ 6165636135373463373766313463",
        "spaceId": "6ec1a5413b6f4e2b01a5c85a8fd797e2",
        "handleId": "doi:10.15911/MyShares.726855"
      }
    },
    "Shares": {
      "type": "object",
      "description": "List of shares.",
      "properties": {
        "shares": {
          "type": "array",
          "description": "The list of share Ids.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "shares"
      ],
      "example": {
        "shares": [
          "1d24c36707d99197c6cd995810a43aca",
          "6825604b0eb6a47b8b7a04b6369eb24d"
        ]
      }
    },
    "QosEntry": {
      "description": "Object representing a QoS entry.",
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string",
          "description": "Id of file that entry was created for."
        },
        "expression": {
          "type": "string",
          "description": "Expression used to select storages on which file should be replicated."
        },
        "replicasNum": {
          "type": "integer",
          "description": "Number of required file replicas.",
          "default": 1
        },
        "fulfilled": {
          "type": "boolean",
          "description": "Indicates whether QoS requirement is fulfilled. QoS requirement comprise of QoS expression and number of required file replicas.\n"
        }
      },
      "example": {
        "qosEntryId": "c84f669f9522c46976fee490d80651f0",
        "fileId": "00000000005CF4706775696423745F772D67686431633765446F4D76546D6F2D67575F3361737A7670486B477A7936587734507265584A7723394A4F355F5F396E4C31623031594576776E667431723230677767776C6B497031394E445F6E3868677873",
        "expression": "country=FR",
        "replicasNum": 2,
        "fulfilled": true
      }
    },
    "QosCreateRequest": {
      "description": "Object representing body of request that adds QoS entry for file or directory",
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string",
          "description": "Id of file or directory entry is going to be created for."
        },
        "expression": {
          "type": "string",
          "description": "Expression used to select storages on which file should be replicated."
        },
        "replicasNum": {
          "type": "integer",
          "description": "Number of required file replicas.",
          "default": 1
        }
      },
      "example": {
        "fileId": "00000000005CF4706775696423745F772D67686431633765446F4D76546D6F2D67575F3361737A7670486B477A7936587734507265584A7723394A4F355F5F396E4C31623031594576776E667431723230677767776C6B497031394E445F6E3868677873",
        "expression": "country=FR",
        "replicasNum": 2
      }
    },
    "QosSummary": {
      "description": "QoS summary for file or directory.",
      "type": "object",
      "properties": {
        "entries": {
          "type": "object",
          "description": "Mapping including all QoS entries (Ids) that influence given file/directory and corresponding  information whether the entry is fulfilled for this file/directory (boolean).\n"
        },
        "assignedEntries": {
          "type": "object",
          "description": "Mapping from storage Id to sublist of QoS entries. This mapping shows which QoS  entries require file replica on given storage (mapping is calculated by system  using information stored in QoS entries)\n"
        },
        "fulfilled": {
          "type": "boolean",
          "description": "Indicates whether all QoS entries for given file or directory are fulfilled."
        }
      },
      "example": {
        "entries": {
          "c84f669f9522c46976fee490d80651f0": true
        },
        "assignedEntries": {
          "6969ba86d2172e15f8156ccb32a58b92": [
            "c84f669f9522c46976fee490d80651f0"
          ]
        },
        "fulfilled": true
      }
    }
  },
  "tags": [
    {
      "name": "Oneprovider",
      "description": "Information about the Oneprovider service"
    },
    {
      "name": "File Path",
      "description": "Files and Directories path related operations"
    },
    {
      "name": "File Data",
      "description": "Files and Directories data related operations"
    },
    {
      "name": "File Metadata",
      "description": "Files and Directories metadata related operations"
    },
    {
      "name": "Deprecated File",
      "description": "Files and Directories related operations (deprecated)"
    },
    {
      "name": "QoS",
      "description": "QoS related operations"
    },
    {
      "name": "Share",
      "description": "Shares related operations"
    },
    {
      "name": "Space",
      "description": "Spaces related operations"
    },
    {
      "name": "Replica",
      "description": "Replication and file distribution control operations"
    },
    {
      "name": "Transfer",
      "description": "Transfers related operations"
    },
    {
      "name": "Monitoring",
      "description": "Metrics and change events monitoring related operations"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Service information",
      "tags": [
        "Oneprovider"
      ]
    },
    {
      "name": "Data access and management",
      "tags": [
        "File Path",
        "File Data",
        "File Metadata",
        "Deprecated File",
        "Share",
        "Space"
      ]
    },
    {
      "name": "Replication and transfer control",
      "tags": [
        "Replica",
        "Transfer"
      ]
    },
    {
      "name": "QoS management",
      "tags": [
        "QoS"
      ]
    },
    {
      "name": "Monitoring and metrics",
      "tags": [
        "Monitoring"
      ]
    }
  ],
  "securityDefinitions": {
    "api_key1": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "api_key2": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key1": []
    },
    {
      "api_key2": []
    }
  ]
}
